//Старая логика отправки

// Процедура формирует и отправляет пакеты документов по отмеченным строкам в реестре	
&НаКлиенте
Процедура ОтправитьДокументы(Кэш, МассивСтрок) Экспорт
	Перем МассивПодготовленныхПакетов, РезультатОтправки;
	ГлавноеОкно = Кэш.ГлавноеОкно;
	УжеАктивированы = Новый СписокЗначений;
	ИННОтправителей = Новый СписокЗначений;
	МассивПакетов = Новый Массив;  // Массив пакетов для одной отправки (если в настройках указано отправлять пакеты по n штук)
	//ПолныйМассивПакетов = Новый Массив;  // Полный массив пакетов для отправки
	Всего = МассивСтрок.Количество();
	ВсегоПакетов = 0;
	счСтрок = 0;
	ОшибкиДоОтправки = 0;
	Кэш.СписокНоменклатуры.Очистить();
	ПоследняяПартия = Ложь;
	
	Если Кэш.Свойство("ПрерватьОтправку") Тогда
		Кэш.Удалить("ПрерватьОтправку");
	КонецЕсли;
	//ВремяНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ВремяНачала = ТекущаяДата();
	Если	Не	Кэш.Свойство("РезультатОтправки", РезультатОтправки)
		Или	(		РезультатОтправки.Свойство("Новый")
			И Не	РезультатОтправки.Новый) Тогда
		РезультатОтправки = Новый Структура("ТипыОшибок,Отправлено,НеОтправлено,НеСформировано,Ошибок,ДетализацияОшибок,ВсегоПакетов,ОшибкиДоОтправки,ДанныеПоСтатусам,ПорНомер,КоличествоСвободныхПотоков,ОтправленоСообщений,ПолученоОтветов,ВремяНачала,ВремяФормирования,ВремяОтправки,ДетализацияОтправки,ВремяЗаписиСтатусов,ВремяПолученияДанных,ВремяОжиданияОтвета, СформированныеПакеты", Новый СписокЗначений,0,0,0,0, Новый Соответствие,0,0,Новый Массив,0,Кэш.КоличествоПотоковОтправки,0,0,ВремяНачала,0,0, Новый Соответствие,0,0,0, Новый Соответствие);
		РезультатОтправки.Вставить("НаЗаписьСтатусов", Новый Структура("Ошибки, Ответы", Новый Соответствие, Новый Соответствие));
		Кэш.Вставить("РезультатОтправки",РезультатОтправки);
	КонецЕсли;
	Кэш.РезультатОтправки.Вставить("Новый", Ложь);
	ПодключитьОбработчикОжидания("ПрерываниеПользователемФормированияДокументов",0.1,Истина);
	
	Пока счСтрок < Всего Цикл //Отправляемые пакеты
		Строка = МассивСтрок[счСтрок];
		Если Не ТипЗнч(МассивСтрок) = Тип("Массив") Тогда
			Строка = Строка.Значение;
		КонецЕсли;
		Если Кэш.Свойство("ПрерватьОтправку") и Кэш.ПрерватьОтправку = Истина Тогда
			Прервать;
		КонецЕсли;
		счСтрок = счСтрок + 1;
		Если счСтрок = Всего Тогда
			ПоследняяПартия = Истина;
		КонецЕсли;
		
		Если Не Строка.Свойство("МассивПодготовленныхПакетов", МассивПодготовленныхПакетов) Тогда
			
			сбисПоказатьСостояние("Формирование электронных документов",ГлавноеОкно,Мин(100,Окр(счСтрок*100/Всего)), "(прервать -  Ctrl+Break)");
			//ДатаНач = Кэш.Интеграция.сбисТекущаяДатаМСек(Кэш);
			МассивПодготовленныхПакетов = Кэш.Текущий.Форма.ПодготовитьСтруктуруДокумента(Строка, Кэш);
			//ДатаКнц = Кэш.Интеграция.сбисТекущаяДатаМСек(Кэш);
			//Кэш.РезультатОтправки.ВремяФормирования = Кэш.РезультатОтправки.ВремяФормирования+(ДатаКнц-ДатаНач)/1000;
			
		КонецЕсли;
		
		Если АктивироватьСертификатыОтправитьДокументы(Кэш, МассивПодготовленныхПакетов, МассивПакетов, ИННОтправителей, УжеАктивированы, ПоследняяПартия) = Ложь Тогда
			сбисСпрятатьСостояние(ГлавноеОкно);
			Возврат;
		КонецЕсли;
		
		ОбработкаПрерыванияПользователя();
	КонецЦикла;
	ОтключитьОбработчикОжидания("ПрерываниеПользователемФормированияДокументов");
	сбисСпрятатьСостояние(ГлавноеОкно);
	
КонецПроцедуры

&НаКлиенте
Функция ОтправитьПартиюПакетов(Кэш, МассивПакетов, ИННОтправителей, УжеАктивированы) Экспорт
	// Функция выполняет отправку партии подготовленных пакетов документов через форму интеграции. Так же отправляет каталог номенклатуры.
	Если ИННОтправителей.Количество()>0 Тогда
		СписокСертификатов = Кэш.Интеграция.ПолучитьСертификатыДляАктивации(Кэш, ИННОтправителей);
		Если СписокСертификатов.Количество()>0 Тогда
			Для Каждого Элемент Из СписокСертификатов Цикл
				Сертификат = Элемент.Значение;
				Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
					Кэш.Интеграция.ПолучитьКодАктивацииСертификата(Кэш, Сертификат);				
				КонецЕсли;
				ФормаВводаПинкода = сбисПолучитьФорму("ФормаВводаПинкода");
				ПараметрыВвода = Новый Структура("СертификатИмя", Кэш.ОбщиеФункции.СформироватьЗаголовокСертификатаДляФормыВвода(Кэш, Сертификат));
				КодАктивации = ФормаВводаПинкода.Показать(ПараметрыВвода);
				Если	Не	ЗначениеЗаполнено(КодАктивации)
					Или		КодАктивации.ПинКод = "" Тогда
					Сообщить("Не активирован сертификат для подписания документов.");
					Возврат Ложь;	
				КонецЕсли;
				Сертификат.Вставить("КодАктивации", КодАктивации.ПинКод);
			КонецЦикла;
			Если Кэш.Интеграция.АктивироватьСерверныеСертификаты(Кэш, СписокСертификатов) = Ложь Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		Для Каждого Элемент Из ИННОтправителей Цикл
			УжеАктивированы.Добавить(Элемент.Значение);
		КонецЦикла;
		ИННОтправителей.Очистить();
	КонецЕсли;
	
	Кэш.ФормаОтправки.ОтправитьПакетыДокументов(Кэш, МассивПакетов);
	Если Кэш.РезультатОтправки.Свойство("ПереотправитьПартию") Тогда
		МассивНеотправленныхПакетов = Новый Массив;
		Для Каждого Пакет Из МассивПакетов Цикл
			Если НЕ Пакет.Свойство("Отправлен") Тогда
				МассивНеотправленныхПакетов.Добавить(Пакет);
			КонецЕсли;
		КонецЦикла;
		Кэш.ФормаОтправки.ОтправитьПакетыДокументов(Кэш, МассивНеотправленныхПакетов);
		Кэш.РезультатОтправки.Удалить("ПереотправитьПартию");
	КонецЕсли;
	Кэш.РезультатОтправки.ВсегоПакетов = Кэш.РезультатОтправки.ВсегоПакетов+МассивПакетов.Количество();
	МассивПакетов.Очистить();
	СтруктураИниФайла = Кэш.Ини;
	//Если	Кэш.Парам.ОтправлятьНоменклатуруСДокументами = Истина
	//	И	СтруктураИниФайла.Свойство("Номенклатура",СтруктураИниФайла)
	//	И	СтруктураИниФайла.Свойство("мФайл",СтруктураИниФайла)
	//	И	СтруктураИниФайла.Свойство("Номенклатура",СтруктураИниФайла) Тогда
	//	ИниНоменклатура = Новый Структура;
	//	Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(ИниНоменклатура, СтруктураИниФайла);
	//	КаталогОтправлен = Кэш.ОбщиеФункции.сбисСформироватьОтправитьКаталогТоваров(Кэш, Новый Структура("СписокНоменклатуры, Организация",Кэш.СписокНоменклатуры),ИниНоменклатура,Новый Структура("РеквизитСопоставленияНоменклатуры", Кэш.КэшЗначенийИни.РеквизитСопоставленияНоменклатуры));
	//	Кэш.СписокНоменклатуры.Очистить();
	//КонецЕсли;
КонецФункции

&НаКлиенте
Функция ОтправитьПодготовленныеПакетыДокументы(Кэш, МассивПодготовленныхПакетов) Экспорт
	//UAA Совместимость кода с УФ, хотя по-хорошему надо привести механизм в соответствие
	АктивироватьСертификатыОтправитьДокументы(Кэш, МассивПодготовленныхПакетов, Новый Массив, Новый СписокЗначений, Новый СписокЗначений, Истина)	
КонецФункции

&НаКлиенте
Функция АктивироватьСертификатыОтправитьДокументы(Кэш, МассивПакетовСтроки, МассивПакетов, ИННОтправителей, УжеАктивированы, ПоследняяПартия) Экспорт
	// Проверяем, надо ли активировать сертификаты. При необходимости открывает форму ввода пин-када для первого сертификата
	
	Если Кэш.РезультатОтправки.Свойство("ПрерватьОтправку") и Кэш.РезультатОтправки.ПрерватьОтправку<>Истина Тогда    // при отправке были проблемы со связью
		Сообщить("Отправка была прервана."+Символы.ПС + Кэш.РезультатОтправки.ПрерватьОтправку );
		Кэш.ФормаОтправки.сбисПолучитьОтветыПоОтправке(Кэш);
		Кэш.ГлавноеОкно.ОбновитьКонтент();
		
		Возврат Ложь;
	КонецЕсли;
	
	КолПакетов = МассивПакетовСтроки.Количество();
	сч = 0;
	
	Для Каждого Пакет Из МассивПакетовСтроки Цикл
		сч = сч+1;
		ПолныйСоставПакета = Пакет;
		
		//++ Бухов А. Точка входа при отправке пакетов документов
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеФормированияПакетаДокументов","Документ_"+Кэш.Текущий.ТипДок,"Документ_Шаблон", Кэш);
		Если фрм<>Ложь Тогда
			ПолныйСоставПакета = фрм.сбисПослеФормированияПакетаДокументов(ПолныйСоставПакета, Кэш);	
		КонецЕсли;
		//-- Бухов А. Точка входа при отправке пакетов документов
		
		Если ПолныйСоставПакета.Свойство("Ошибка") Тогда
			Кэш.РезультатОтправки.ОшибкиДоОтправки = Кэш.РезультатОтправки.ОшибкиДоОтправки + 1;
			Если ПолныйСоставПакета.Свойство("Вложение") и ПолныйСоставПакета.Вложение.Количество()>0 и ПолныйСоставПакета.Вложение[0].Свойство("Документы1С") Тогда
				ОсновнойДокумент1С = ПолныйСоставПакета.Вложение[0].Документы1С[0].Значение;
			Иначе
				ОсновнойДокумент1С = Неопределено;
			КонецЕсли;
			Кэш.ОбщиеФункции.ДобавитьОшибкуВРезультатОтправки(Кэш, ПолныйСоставПакета.Ошибка, ПолныйСоставПакета.Ошибка, ОсновнойДокумент1С);
		Иначе
			ИННОтправителя = ?(ПолныйСоставПакета.НашаОрганизация.Свойство("СвФЛ"),ПолныйСоставПакета.НашаОрганизация.СвФЛ.ИНН,ПолныйСоставПакета.НашаОрганизация.СвЮЛ.ИНН);
			Если ИННОтправителей.НайтиПоЗначению(ИННОтправителя)=Неопределено и УжеАктивированы.НайтиПоЗначению(ИННОтправителя)=Неопределено Тогда 
				ИННОтправителей.Добавить(ИННОтправителя);
			КонецЕсли;
			Если ПолныйСоставПакета.Свойство("Вложение") Тогда
				МассивПакетов.Добавить(ПолныйСоставПакета);
				Если МассивПакетов.Количество() = Кэш.КоличествоВОтправке Тогда
					Результат = ОтправитьПартиюПакетов(Кэш, МассивПакетов, ИННОтправителей, УжеАктивированы);	
					Если Результат = Ложь Тогда
						Возврат Ложь;	
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ПоследняяПартия Тогда
		Результат = ОтправитьПартиюПакетов(Кэш, МассивПакетов, ИННОтправителей, УжеАктивированы);	
		Если Результат = Ложь Тогда
			Возврат Ложь;	
		КонецЕсли;
		Кэш.ФормаОтправки.сбисПолучитьОтветыПоОтправке(Кэш);
		Кэш.РезультатОтправки.НеОтправлено = Кэш.РезультатОтправки.ВсегоПакетов-Кэш.РезультатОтправки.Отправлено+Кэш.РезультатОтправки.ОшибкиДоОтправки;
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеОтправкиПакетов","РаботаСДокументами1С","", Кэш);
		Если фрм<>Ложь Тогда
			фрм.сбисПослеОтправкиПакетов(Кэш);	
		КонецЕсли;
		Если Не Кэш.ТихийРежим Тогда
			Если		Кэш.РезультатОтправки.Свойство("ОбработчикРезультата")
				И	Не	Кэш.РезультатОтправки.ОбработчикРезультата = Неопределено Тогда
				ОбработчикРезультат = Кэш.РезультатОтправки.ОбработчикРезультата;
				Кэш.РезультатОтправки.Удалить("ОбработчикРезультата");
				МодульОбъектаКлиент().ВыполнитьСбисОписаниеОповещения(Кэш.РезультатОтправки, ОбработчикРезультат);
			ИначеЕсли	Кэш.РезультатОтправки.Свойство("ФормаОтправки") Тогда
				Кэш.ГлавноеОкно.сбисПолучитьФорму(Кэш.РезультатОтправки.ФормаОтправки).ПослеОтправки(Кэш);
			Иначе
				фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьРезультатОтправки","ФормаРезультатОтправки","", Кэш);
				фрм.ПоказатьРезультатОтправки(Кэш);
				Если Кэш.РезультатОтправки.Свойство("ОтправкаИзПересылки") Тогда
					сбисПолучитьФорму("ФормаПересылкаПакетов").ПослеОтправки(Кэш);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Истина;
КонецФункции

