 
 // v8unpack &НаКлиенте
Процедура ОтправитьНажатие(Элемент)
	// Процедура отправляет текущий пакет документов 	
	СоставПакета.Вставить("Примечание",ПакетКомментарий);
	МассивПакетовСтроки = Новый Массив;
	МассивПакетовСтроки.Добавить(СоставПакета);
	ВремяНачала = ТекущаяДата();
	МестныйКэш.Вставить("РезультатОтправки", Новый Структура("ТипыОшибок,Отправлено,НеОтправлено,НеСформировано,Ошибок,ДетализацияОшибок,ВсегоПакетов,ОшибкиДоОтправки,ДанныеПоСтатусам,ПорНомер,КоличествоСвободныхПотоков,ФормаОтправки,ОтправленоСообщений,ПолученоОтветов,ВремяНачала,ВремяФормирования,ВремяОтправки,ДетализацияОтправки,ВремяЗаписиСтатусов,ВремяПолученияДанных,ВремяОжиданияОтвета, СформированныеПакеты", Новый СписокЗначений,0,0,0,0,Новый Соответствие,0,0,Новый Массив,0,30,"ФормаПросмотрДокумента",0,0,ВремяНачала,0,0, Новый Соответствие,0,0,0, Новый Соответствие));
	МестныйКэш.РезультатОтправки.Вставить("НаЗаписьСтатусов", Новый Структура("Ошибки, Ответы", Новый Соответствие, Новый Соответствие));
	
	сбисПолучитьФорму("Документ_Шаблон").АктивироватьСертификатыОтправитьДокументы(МестныйКэш, МассивПакетовСтроки, Новый Массив, Новый СписокЗначений, Новый СписокЗначений, Истина);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////

////////////////////// Обычное приложение/////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//Симонов И.В. 19.07.17 +
Функция сбисУстановитьТипНоменклауры(ИниФайл,Кэш,ЭтаФорма,ЭлементыФормы) Экспорт			
	мВидовСправочников = Новый Массив;		
	ВидыСпр= Неопределено;
	Если ИниФайл.Свойство("ВидыСправочниковНоменклатуры") Тогда    // ветка для инишки для загрузки
		ВидыСпр = СтрЗаменить(ИниФайл.ВидыСправочниковНоменклатуры.Значение,"'","");
	ИначеЕсли ИниФайл.Свойство("Номенклатура") Тогда     // ветка для инишки конфигурации
		ИмяСправочникаНоменклатуры = СокрЛП(Сред(ИниФайл.Номенклатура.Значение, Найти(ИниФайл.Номенклатура.Значение, ".")+1));
		Если нрег(ИмяСправочникаНоменклатуры)<>"номенклатура" Тогда      // если номенклатура хранится в другом справочнике
			ВидыСпр = "СправочникСсылка."+СокрЛП(Сред(ИниФайл.Номенклатура.Значение, Найти(ИниФайл.Номенклатура.Значение, ".")+1));
		КонецЕсли;
	КонецЕсли;	
	Если ВидыСпр <> Неопределено Тогда
		МассивСправочников = Кэш.ОбщиеФункции.РазбитьСтрокуВМассивНаКлиенте(ВидыСпр,",");	
		Для Каждого Элемент Из МассивСправочников Цикл
			мВидовСправочников.Добавить(Тип(Элемент));
		КонецЦикла;
		Если мВидовСправочников<>Неопределено Тогда
			ОписаниеСоставногоТипа = Новый ОписаниеТипов(мВидовСправочников);
			Если ЭтаФорма.ТабличнаяЧасть.Колонки.Номенклатура.ТипЗначения<>ОписаниеСоставногоТипа Тогда
				ЭтаФорма.ТабличнаяЧасть.Колонки.Удалить("Номенклатура");
				ЭтаФорма.ТабличнаяЧасть.Колонки.Вставить(5,"Номенклатура", ОписаниеСоставногоТипа);
				ЭлементыФормы.ТабличнаяЧасть.Колонки.Удалить(ЭлементыФормы.ТабличнаяЧасть.Колонки.Номенклатура);
				НоваяКолонкаНоменклатура = ЭлементыФормы.ТабличнаяЧасть.Колонки.Вставить(5, "Номенклатура");
				НоваяКолонкаНоменклатура.Имя = "Номенклатура";
				НоваяКолонкаНоменклатура.Данные = "Номенклатура";
				НоваяКолонкаНоменклатура.ЭлементУправления.КнопкаВыбора = Истина;
				НоваяКолонкаНоменклатура.ЭлементУправления.КнопкаОчистки = Истина;
				ЭлементыФормы.ТабличнаяЧасть.Колонки.Номенклатура.ЭлементУправления.УстановитьДействие("ПриИзменении", Новый Действие("ТабличнаяЧастьНоменклатураПриИзменении"));
				ЭлементыФормы.ТабличнаяЧасть.Колонки.Номенклатура.ЭлементУправления.УстановитьДействие("Очистка", Новый Действие("ТабличнаяЧастьНоменклатураОчистка"));
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;			
КонецФункции
//Симонов И.В. 19.07.17 -

Функция сбисУстановитьТипХарактеристики(ИниФайл,Кэш,ЭтаФорма,ЭлементыФормы) Экспорт			
	мВидовСправочников = Новый Массив;		
	ВидыСпр= Неопределено;
	Если ИниФайл.Свойство("ВидыСправочниковХарактеритики") Тогда    // ветка для инишки для загрузки
		ВидыСпр = СтрЗаменить(ИниФайл.ВидыСправочниковХарактеристики.Значение,"'","");
	ИначеЕсли ИниФайл.Свойство("Характеристика") Тогда     // ветка для инишки конфигурации
		ИмяСправочникаХарактеристики = СокрЛП(Сред(ИниФайл.Характеристика.Значение, Найти(ИниФайл.Характеристика.Значение, ".")+1));
		Если нрег(ИмяСправочникаХарактеристики)<>"характеристика" Тогда      // если характеристика хранится в другом справочнике
			ВидыСпр = "СправочникСсылка."+СокрЛП(Сред(ИниФайл.Характеристика.Значение, Найти(ИниФайл.Характеристика.Значение, ".")+1));
		КонецЕсли;
	КонецЕсли;	
	Если ВидыСпр <> Неопределено Тогда
		МассивСправочников = Кэш.ОбщиеФункции.РазбитьСтрокуВМассивНаКлиенте(ВидыСпр,",");	
		Для Каждого Элемент Из МассивСправочников Цикл
			мВидовСправочников.Добавить(Тип(Элемент));
		КонецЦикла;
		Если мВидовСправочников<>Неопределено Тогда
			ОписаниеСоставногоТипа = Новый ОписаниеТипов(мВидовСправочников);
			Если ЭтаФорма.ТабличнаяЧасть.Колонки.Характеристика.ТипЗначения<>ОписаниеСоставногоТипа Тогда
				ЭтаФорма.ТабличнаяЧасть.Колонки.Удалить("Характеристика");
				ЭтаФорма.ТабличнаяЧасть.Колонки.Вставить(6,"Характеристика", ОписаниеСоставногоТипа);
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;			
КонецФункции

Процедура ТаблицаДокументовПриАктивизацииЯчейки(Элемент)
	// Процедура обновляет информацию по вложению (просмотр, прохождение, сопоставление номенклатуры) при переключении между вложениями в таблице
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	сбисУстановитьHTML(Элемент.ТекущиеДанные.ТекстHTML);
	Вложение = Элемент.ТекущиеДанные.Вложение[0].Значение;
	ДокРазобран = (ДокументУчетаРазобран И ИмяРеквизитаВложений = "ВложениеУчета") или (ДокументРазобран И ИмяРеквизитаВложений = "Вложение");
	Если ДокРазобран Тогда
		Если Вложение.Свойство("Направление") Тогда 
			Если Вложение.Свойство("СтруктураИниФайла") Тогда
				//Симонов И.В. 19.07.17 +																				
				сбисУстановитьТипНоменклауры(Вложение.СтруктураИниФайла,МестныйКэш,ЭтаФорма,ЭлементыФормы);				
				//Симонов И.В. 19.07.17 -
				сбисУстановитьТипХарактеристики(Вложение.СтруктураИниФайла,МестныйКэш,ЭтаФорма,ЭлементыФормы);
				Ини = МестныйКэш.ФормаНастроек.Ини(МестныйКэш, Вложение.ИмяИни);
				ИмяТекущее = МестныйКэш.ОбщиеФункции.сбисСообщитьИмяРеквизита(МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Название",Вложение.СтруктураИниФайла, МестныйКэш));
				
				сбисЭлементФормы(ЭтаФорма, "СинонимДокумента").СписокВыбора.Очистить();
				Для Каждого ТипДокумент Из Ини.мДокумент Цикл
					Название = МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Название",ТипДокумент.Значение,МестныйКэш);
					Имя = ТипДокумент.Ключ;
					СписокТиповДокументов.Добавить(Название, Имя);
					сбисЭлементФормы(ЭтаФорма, "СинонимДокумента").СписокВыбора.Добавить(Название);
					Если Название = ИмяТекущее Тогда
						СинонимДокумента = Название; 	
					КонецЕсли;
				КонецЦикла;
			Иначе
				ОчиститьВкладкуЗагрузка();
			КонецЕсли;
			ЗаполнитьДокументДаннымиЭД(Вложение);
			Если Вложение.Свойство("Договор1С") Тогда
				Договор1С = Вложение.Договор1С;
			иначе
				Договор1С = "";
			КонецЕсли;
			Если Вложение.Свойство("Дата1С") Тогда
				Дата1С = Вложение.Дата1С;
			иначе
				Дата1С = "";
			КонецЕсли;
			Если Вложение.Свойство("Контрагент1С") Тогда
				Контрагент1С = Вложение.Контрагент1С;
			иначе
				Контрагент1С = "";
			КонецЕсли;
		ИначеЕсли Вложение.Свойство("НоменклатураКодКонтрагента") Тогда
			сбиЗаполнитьТаблицуНоменклатуры(Вложение);
		Иначе
			ТабличнаяЧасть.Очистить();
		КонецЕсли;
		Если Найти(Элемент.ТекущиеДанные.Статус, "Не найден контрагент") Тогда
			сбисЭлементФормы(ЭтаФорма,"НеНайденКонтрагент").Видимость = Истина;
		Иначе
			сбисЭлементФормы(ЭтаФорма,"НеНайденКонтрагент").Видимость = Ложь;
		КонецЕсли;
	Иначе
		ОчиститьВкладкуЗагрузка();
	КонецЕсли;
КонецПроцедуры
Процедура ВыборЗакладки(Элемент)
	// Процедура осуществляет переход по вкладкам формы	
	ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы[Элемент.Имя];
	Для каждого Закладка из МассивЗакладок Цикл
		ЭлементыФормы["Закладка" + Закладка].ЦветФона = ?(Закладка = Элемент.Имя, Новый Цвет(0,85,187), Новый Цвет(255,255,255));
	КонецЦикла;	
	
КонецПроцедуры
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	// При двойном щелчке по документу 1С открывается его карточка	
	Если Колонка.Имя = "Документы1СНазвания" и Элемент.ТекущиеДанные.Документы1С.Количество()>0 Тогда
		Для Каждого Документ1С из Элемент.ТекущиеДанные.Документы1С Цикл
			ОткрытьЗначение(Документ1С.Значение);
		КонецЦикла;
	ИначеЕсли Колонка.Имя = "Удалить"  Тогда
		УдалитьВложение("");
	КонецЕсли;	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	// Переходим на закладку просмотр, чтобы при открытии в следующий раз форма открывалась на ней	
	ВыборЗакладки(Новый Структура("Имя", "Документы"));
КонецПроцедуры
Процедура ТаблицаДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Оформление таблицы вложений пакета	
	ОформлениеСтроки.Ячейки.Удалить.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.Удалить.ИндексКартинки = 0;
	Если НЕ СоставПакета.Свойство("Направление") Тогда		
		Возврат;
	КонецЕсли;
	ОформлениеСтроки.Ячейки.Статус.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.Статус.ИндексКартинки = ДанныеСтроки.СтатусКартинка;	
	
	Если Найти(ДанныеСтроки.Статус, "Не вся номенклатура сопоставлена")>0 или Найти(ДанныеСтроки.Статус, "Не найдена организация")>0 или Найти(ДанныеСтроки.Статус, "Не найден контрагент")>0 Тогда
		ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(187,12,12);
	Иначе
		ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(0,0,0);
	КонецЕсли;
КонецПроцедуры
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// Закрытие формы просмотра при закрытии обработки	
	Если ИмяСобытия = "ЗакрытьСБИС" Тогда
		Если ЭтаФорма.Открыта() Тогда
			ЭтаФорма.Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ТабличнаяЧастьХарактеристикаНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Устанавливается владелец характеристики 	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура) Тогда
		Если МестныйКэш.Ини.Конфигурация.Свойство("ХарактеристикиНоменклатуры") Тогда
			ИмяСправочникаХарактеристикиНоменклатуры = СокрЛП(Сред(МестныйКэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, Найти(МестныйКэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, ".")+1));
		Иначе
			ИмяСправочникаХарактеристикиНоменклатуры="ХарактеристикиНоменклатуры";
		КонецЕсли;
		Форма=Справочники[ИмяСправочникаХарактеристикиНоменклатуры].ПолучитьФормуВыбора(,Элемент);
		Форма.ПараметрВыборПоВладельцу = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура;
		Форма.Открыть();	
	Иначе
		Предупреждение("Заполните номенклатуру");
	КонецЕсли;
КонецПроцедуры
Процедура СобытияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Оформления таблицы Прохождения	
	Если Лев(ДанныеСтроки.Название,9) = "Отклонено" Тогда
		ОформлениеСтроки.Ячейки.Название.ЦветТекста = Новый Цвет(255, 0, 0);	
	КонецЕсли;
КонецПроцедуры
Процедура ТабличнаяЧастьИдентификаторПриИзменении(Элемент)
	// Процедура записывает сопоставление номенклатуры	
	ТабЧасть = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть");
	Если ЗначениеЗаполнено(ТабЧасть.ТекущиеДанные.Номенклатура) Тогда
		ГлавноеОкно = МестныйКэш.ГлавноеОкно;
		ДанныеНоменклатуры = Новый Структура("Название,Идентификатор,Номенклатура,Характеристика,GTIN",ТабЧасть.ТекущиеДанные.Название,ТабЧасть.ТекущиеДанные.Идентификатор,ТабЧасть.ТекущиеДанные.Номенклатура,ТабЧасть.ТекущиеДанные.Характеристика,ТабЧасть.ТекущиеДанные.GTIN);
		ПутьКонтрагента = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьКонтрагента;
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("УстановитьСоответствиеНоменклатуры",МестныйКэш.ФормаРаботыСНоменклатурой,"", МестныйКэш);
		фрм.УстановитьСоответствиеНоменклатуры(МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьКонтрагента, Вложение.СтруктураФайла), ДанныеНоменклатуры, МестныйКэш.Парам.КаталогНастроек, МестныйКэш.Ини);
		НомерПП = ТабЧасть.ТекущиеДанные.НомерПП;
		ПутьТаблДок = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
		ТаблДок = МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
		ТаблДок[НомерПП-1].Вставить(Вложение.НоменклатураКодКонтрагента, ТабЧасть.ТекущиеДанные.Идентификатор);
		НоменклатураСопоставлена = Истина;
		Для Каждого СтрТабл Из ТаблДок Цикл
			Если Не СтрТабл.Свойство(Вложение.НоменклатураКодКонтрагента) или Не ЗначениеЗаполнено(СтрТабл[Вложение.НоменклатураКодКонтрагента])  Тогда
				НоменклатураСопоставлена = Ложь;	
			КонецЕсли;
		КонецЦикла;
		Если НоменклатураСопоставлена Тогда
			СоставПакета.Удалить("Ошибка");
			Вложение.XMLДокумента = МестныйКэш.ОбщиеФункции.сбисПолучитьXMLФайлаИзСтруктуры(Вложение,МестныйКэш.XSLT);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
Процедура сбисТабличнаяЧастьПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.Статус.ОтображатьКартинку = Истина;
	Если ЗначениеЗаполнено(ДанныеСтроки.Идентификатор) Тогда
		ОформлениеСтроки.Ячейки.Статус.ИндексКартинки = 0;
	Иначе
		ОформлениеСтроки.Ячейки.Статус.ИндексКартинки = 1;
	КонецЕсли;
КонецПроцедуры
Процедура ПолеHTMLДокументаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Если ДанныеСобытия.srcElement.id = "Открыть" Тогда
		Если сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.Свойство("ПолноеИмяФайла") Тогда // файл добавлен в пакет для отправки (вручную или во внешних функциях) 
			ПолноеИмяФайла = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.ПолноеИмяФайла;
		Иначе
			ФайлИмя = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение;
			Если	Не	ФайлИмя.Свойство("Файл", ФайлИмя)
				Или	Не	ФайлИмя.Свойство("Имя", ФайлИмя) Тогда
				Сообщить("Невозможно открыть файл во внешней программе.");
				Возврат;
			КонецЕсли;
			ПолноеИмяФайла = КаталогВременныхФайлов()+ ФайлИмя;   // файл с онлайна
			МестныйКэш.Интеграция.СохранитьВложениеПоСсылкеВФайл(МестныйКэш,сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.Файл.Ссылка,ПолноеИмяФайла);
		КонецЕсли;
		ЗапуститьПриложение(ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры
Процедура ПодготовитьКЗагрузке(Команда)
	// Вставить содержимое обработчика.
	сбисРазобратьДокумент("");
	Для каждого СтрокаТаблДок из ТаблицаДокументов Цикл
		
		Вложение = СтрокаТаблДок.Вложение[0].Значение;
		Если СтрокаТаблДок.МожемЗагрузитьВ1С <=0 Тогда					//Если на вложение нет ИНИшки для загрузки то ничего не делаем
			Продолжить             
		КонецЕсли;
		ТипДокумента = МестныйКэш.ОбщиеФункции.сбисСообщитьИмяРеквизита(МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Документ", Вложение.СтруктураИниФайла, МестныйКэш));
		Вложение.Вставить("ТипДокумента", ТипДокумента);
		фрм = МестныйКэш.ГлавноеОкно.сбисНайтиФормуФункции("ЗаполнитьДаннымиСтруктурыФайлаСтруктуруДокумента","Документ_"+Вложение.ТипДокумента,"Документ_Шаблон",МестныйКэш);
		СтруктураДокОбъект = Новый Структура; // Структура с названиями полей, как у создаваемого документа 1С
		СтруктураФайла = Вложение.СтруктураФайла;
		СтруктураДанныхДокумента = Новый Структура;
		МестныйКэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(СтруктураДанныхДокумента, Вложение.СтруктураИниФайла);
		фрм.ЗаполнитьДаннымиСтруктурыФайлаСтруктуруДокумента(МестныйКэш, Вложение.СтруктураФайла, СтруктураДанныхДокумента, СтруктураДокОбъект, Новый Массив,СоставПакета,Вложение);
		сбисЗаполнитьДанныеВложения(Вложение, СтруктураДокОбъект);
	КонецЦикла;
	ТаблицаДокументовПриАктивизацииЯчейки(сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов"));
	
	Если	МодульОбъектаКлиент().ПолучитьЗнаениеФичи(Новый Структура("НазваниеФичи", "ПоддержкаМаркировки"))
		И	МестныйКэш.Парам.СпособХраненияНастроек = 1 Тогда
		
		сбисЭлементФормы(ЭтаФорма, "УчетОрганизация").Доступность = Истина;
		сбисЭлементФормы(ЭтаФорма, "УчетКонтрагент").Доступность = Истина;
		сбисЭлементФормы(ЭтаФорма, "УчетГрузополучатель").Доступность = Истина;
	КонецЕсли;
	
	сбисЭлементФормы(ЭтаФорма,"ПодготовитьКЗагрузке").Видимость = Ложь;
	сбисЭлементФормы(ЭтаФорма,"ЗагрузитьНаВложении").Видимость = Истина;
КонецПроцедуры
Процедура ТаблицаДокументовШифрованиеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекДанные = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные;
	Если ТекДанные<>Неопределено Тогда
		СоставПакета.Вложение[ТекДанные.НомерВложенияВПакете].Вставить(Элемент.ТекущаяКолонка.Имя, ТекДанные[Элемент.ТекущаяКолонка.Имя]);
	КонецЕсли;
КонецПроцедуры
Процедура ПереключитьТипВложений(Команда)
	// Вставить содержимое обработчика.
	Если ИмяРеквизитаВложений = "Вложение" Тогда
		Если Не СоставПакета.Свойство("ВложениеУчета") Тогда
			Сообщить("Отсутствуют вложения учета. Возможно в личном кабинете СБИС учет не ведется.");
			Возврат;
		КонецЕсли;
		ИмяРеквизитаВложений = "ВложениеУчета";
		сбисЭлементФормы(ЭтаФорма,"ПереключитьТипВложений").Заголовок = "Показать вложения ЭДО";
		Если Не ВложенияУчетаРазобраны Тогда
			ВложенияУчетаРазобраны = Истина;
			сч = 0;
			фрмСтатусы = МестныйКэш.ГлавноеОкно.сбисНайтиФормуФункции("НайтиДокументы1СПоИдВложенияСБИС",МестныйКэш.ФормаРаботыСоСтатусами,"",МестныйКэш);
			Для Каждого ВложениеУчета Из СоставПакета.ВложениеУчета Цикл
				СоставПакета.ВложениеУчета[сч].Вставить("Направление", СоставПакета.Направление);
				СоставПакета.ВложениеУчета[сч].Вставить("Идентификатор", ВложениеУчета.Тип+ВложениеУчета.Подтип+ВложениеУчета.ВерсияФормата+ВложениеУчета.ПодверсияФормата);
				ТекстHTML = МестныйКэш.Интеграция.ПолучитьHTMLВложения(МестныйКэш, СоставПакета.Идентификатор, ВложениеУчета);
				СоставПакета.ВложениеУчета[сч].Вставить("ТекстHTML",ТекстHTML);
				ДанныеДокумента1С = фрмСтатусы.НайтиДокументы1СПоИдВложенияСБИС(СоставПакета.Идентификатор, ВложениеУчета.Идентификатор, МестныйКэш.Ини, МестныйКэш.ГлавноеОкно.Кэш.Парам.КаталогНастроек);
				СоставПакета.ВложениеУчета[сч].Вставить("Документы1С", Новый СписокЗначений);
				СоставПакета.ВложениеУчета[сч].Вставить("Документ1СПроведен");
				СоставПакета.ВложениеУчета[сч].Вставить("Отмечен", Истина);
				Если ЗначениеЗаполнено(ДанныеДокумента1С) Тогда
					СоставПакета.ВложениеУчета[сч].Документы1С=ДанныеДокумента1С.Ссылки;
					СоставПакета.ВложениеУчета[сч].Документ1СПроведен=ДанныеДокумента1С.Проведен;
				КонецЕсли;
				сч = сч+1;
			КонецЦикла;
		КонецЕсли;
	Иначе
		ИмяРеквизитаВложений = "Вложение";
		сбисЭлементФормы(ЭтаФорма,"ПереключитьТипВложений").Заголовок = "Показать вложения СБИС";
	КонецЕсли;
	ЗаполнитьТаблицуДокументов(СоставПакета);
	сбисУстановитьВидимостьЭлементов(МестныйКэш);
	ТаблицаДокументовПриАктивизацииЯчейки(сбисЭлементФормы(ЭтаФорма, "ТаблицаДокументов"));
КонецПроцедуры

Процедура ОтметитьВсеПриИзменении(Элемент)
	ПутьТаблДок = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
	ТаблДок = МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
	Для Каждого Строка Из ЭтаФорма.ТабличнаяЧасть Цикл
		Строка.Отмечен = ОтметитьВсе;   
		Если ОтметитьВсе Тогда
			ТаблДок[Строка.НомерПП-1].Удалить("НеЗагружать");
		Иначе
			ТаблДок[Строка.НомерПП-1].Вставить("НеЗагружать");
		КонецЕсли;
	КонецЦикла;    
	ЗаполнитьТаблицуДокументов(СоставПакета);
КонецПроцедуры
Процедура ТабличнаяЧастьПриИзмененииФлажка(Элемент, Колонка)
	// При снятии флага указываем на строке признак "НеЗагружать"
	ТабЧасть = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть");
	НомерПП = ТабЧасть.ТекущиеДанные.НомерПП;
	ПутьТаблДок = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
	ТаблДок = МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
	Если ТабЧасть.ТекущиеДанные.Отмечен Тогда
		ТаблДок[НомерПП-1].Удалить("НеЗагружать");
	Иначе
		ТаблДок[НомерПП-1].Вставить("НеЗагружать");
	КонецЕсли;
	ЗаполнитьТаблицуДокументов(СоставПакета);
КонецПроцедуры

