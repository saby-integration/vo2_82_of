
//Процедура для вызова отправки документов по кнопке "Печать"
Функция Печать(СсылкаНаОбъект1С=Неопределено) Экспорт
	ДопПараметрыОбработкиПечать = ДополнительныеПараметры; // уникальное имя переменно чтобы не потерять значение
	Если СсылкаНаОбъект1С<>Неопределено Тогда
		СсылкаНаОбъект=СсылкаНаОбъект1С
	КонецЕсли;
	ГлавноеОкно = сбисПолучитьФорму("ФормаГлавноеОкно");
	
	//Дополнение для неуправляемой формы
	ОбъектыНазначения = Новый Массив();
	ОбъектыНазначения.Добавить(СсылкаНаОбъект);
	////////////////////////////////////
	
	ДополнительныеПараметрыКэша = Новый Структура;
	ДополнительныеПараметрыКэша.Вставить("РежимЗапускаГлавногоОкна", "ПечатнаяФорма");
	Кэш = ГлавноеОкно.КэшПодготовить(ДополнительныеПараметрыКэша);	
	Кэш.Текущий.Раздел = "3";
	Кэш.Текущий.ТипДок = СсылкаНаОбъект.Метаданные().Имя;
	Кэш.Парам = ВосстановитьЗначение("сбисПарам");
	
	ВсеВключилось = ГлавноеОкно.ОпределитьИнтеграциюРабочиеФормы(Кэш,Кэш.Парам);
	Если Не ВсеВключилось Тогда//Не удалось включить интеграцию, либо форма хранения настроек недоступна
		Возврат Неопределено;
	КонецЕсли;
	Если Кэш.Парам.СпособОбмена = 0 или Кэш.Парам.СпособОбмена = 2 или ГлавноеОкно.Кэш.Парам.СпособОбмена = 3 или ГлавноеОкно.Кэш.Парам.СпособОбмена = 4 Или ГлавноеОкно.Кэш.Парам.СпособОбмена = 6 Тогда // SDK
		формаАвторизации = сбисПолучитьФорму("ФормаАвторизация",,,ГлавноеОкно);
		Если (ГлавноеОкно.Кэш.Парам.ВходПоСертификату и Кэш.Парам.ЗапомнитьСертификат) или (НЕ Кэш.Парам.ВходПоСертификату и Кэш.Парам.ЗапомнитьПароль) Тогда
			УспешнаяАвторизация = формаАвторизации.Авторизоваться(Кэш);
		КонецЕсли;
		Если УспешнаяАвторизация<>Истина Тогда
			Результат = формаАвторизации.ОткрытьМодально();
			Если Результат = Неопределено Тогда
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Отказ = Ложь;
	Если Не ГлавноеОкно.Кэш.КэшНастроек.ИниВПорядке Тогда
		ГлавноеОкно.сбисПолучитьУстановитьНастройки(ГлавноеОкно.Кэш, Ложь);
	КонецЕсли;
	Если		Отказ
		Или Не	ГлавноеОкно.Кэш.КэшНастроек.ИниВПорядке Тогда
		Возврат Неопределено;
	КонецЕсли;
	СбисСтруктураРазделов = ГлавноеОкно.Кэш.ФормаНастроек.ПолучитьСтруктуруРазделов(ГлавноеОкно.Кэш,,Отказ);
	Для Каждого Документ Из ОбъектыНазначения Цикл
		ИмяДокумента = ГлавноеОкно.Кэш.ОбщиеФункции.ПолучитьРеквизитМетаданныхОбъекта(Документ, "Имя"); 
		
		Попытка
			НаборПодходящихИни = МодульОбъектаКлиент().ИниПоПараметрам(Новый Структура("Тип1С", ИмяДокумента));
		Исключение
			МодульОбъектаКлиент().СообщитьСбисИсключение(ИнформацияОбОшибке(), "МодульОбъектаКлиент.Найти_мФайлПоВложению");
		КонецПопытки;
		
		//Получим настройки документа
		СписокИни = Новый СписокЗначений;
		Для Каждого КлючИЗначениеИни Из НаборПодходящихИни Цикл
			ЗначениеИни = КлючИЗначениеИни.Значение;
			Если	ЗначениеИни.Свойство("ЗапросСпискаДокументов")
				И	ЗначениеИни.Свойство("Реестр1С_Название") Тогда 
				Реестр1С_Название = ГлавноеОкно.Кэш.ОбщиеФункции.РассчитатьЗначение("Реестр1С_Название", ЗначениеИни, ГлавноеОкно.Кэш);
				СписокИни.Добавить(КлючИЗначениеИни.Ключ, ?(ЗначениеЗаполнено(Реестр1С_Название),Реестр1С_Название, ИмяДокумента));
			КонецЕсли;
		КонецЦикла;
		
		Если СписокИни.Количество() = 0 тогда
			Если ГлавноеОкно.Кэш.ини.Свойство(ИмяДокумента) Тогда	
				СписокИни.Добавить(ИмяДокумента, ИмяДокумента);
			Иначе
				Сообщить("Выгрузка данного типа документов не поддерживается!");
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если СписокИни.Количество() = 1 Тогда
// << alo Меркурий
			ИмяИни = СписокИни[0].Значение;
	    Иначе
			Форма_ВыборИзСписка = сбисПолучитьФорму("Форма_ВыборИзСписка");
			Форма_ВыборИзСписка.СписокДляВыбора = СписокИни;
			Форма_ВыборИзСписка.Заголовок = "Выберите настройку для формирования документов";
			ИмяИни = Форма_ВыборИзСписка.ОткрытьМодально();
			Если НЕ ЗначениеЗаполнено(ИмяИни) Тогда
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если ТипЗнч(ДопПараметрыОбработкиПечать)=тип("Структура") И ДопПараметрыОбработкиПечать.свойство("ИдентификаторКоманды") 
				И ДопПараметрыОбработкиПечать.ИдентификаторКоманды = "sbis1cПогаситьВСД" Тогда
			сбисПогаситьВСД(ГлавноеОкно, ИмяИни, Документ);
		Иначе
			сбисПечатьПослеВыбораИни(ГлавноеОкно, ИмяИни, Документ);
		КонецЕсли;
	КонецЦикла;
КонецФункции

Функция сбисПолучитьФорму(ИмяФормы, Объект1С = Неопределено, ПараметрыФормы = Неопределено, ВладелецФормы = Неопределено)

	Если Объект1С = Неопределено Тогда
		Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы,ВладелецФормы);
	Иначе
		Возврат Объект1С.ПолучитьФорму(ИмяФормы,ВладелецФормы);
	КонецЕсли;	
КонецФункции

Функция сбисПечатьПослеВыбораИни(ГлавноеОкно, ИмяИни, Документ);
	Ини = ГлавноеОкно.Кэш.ФормаНастроек.Ини(ГлавноеОкно.Кэш, ИмяИни);
	ГлавноеОкно.Кэш.Текущий.ТипДок = ИмяИни;
		
	//Подготовим фильтр для запроса документов
	ПараметрыФильтра = Новый Структура;
	ПараметрыФильтра.Вставить( "ФильтрДокумент", Документ); 		
	Контекст=новый структура("ини",Новый структура("Документ",новый структура("РассчитанноеЗначение", Документ)));
	РеквизитДата = "";
	РеквизитОтветственный = "";
	Для Каждого мФайл Из Ини.мФайл Цикл
		Если мФайл.Значение.Свойство("Документ_Дата") Тогда
			РеквизитДата = мФайл.Значение.Документ_Дата.Значение;
		КонецЕсли;
		Если мФайл.Значение.Свойство("Ответственный") Тогда
			РеквизитОтветственный = мФайл.Значение.Ответственный.Значение;
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(РеквизитДата) Тогда
		ДатаНач = ГлавноеОкно.Кэш.ОбщиеФункции.РассчитатьЗначениеНаСервере(РеквизитДата,Контекст);
		ПараметрыФильтра.Вставить( "ФильтрДатаНач", ДатаНач); 
		ПараметрыФильтра.Вставить( "ФильтрДатаКнц", ДатаНач); 
	иначе
		ПараметрыФильтра.Вставить( "ФильтрДатаНач", ГлавноеОкно.ФильтрДатаНач); 
		ПараметрыФильтра.Вставить( "ФильтрДатаКнц", ГлавноеОкно.ФильтрДатаКнц); 
	КонецЕсли;
	ПараметрыФильтра.Вставить( "ФильтрКонтрагент", "");
	ПараметрыФильтра.Вставить( "ФильтрКонтрагентПодключен", "");
	ПараметрыФильтра.Вставить( "ФильтрОрганизация", "");
	ПараметрыФильтра.Вставить( "ФильтрСостояние", "Все документы");
	ИниКонфигурация = ГлавноеОкно.Кэш.ФормаНастроек.Ини(ГлавноеОкно.Кэш, "Конфигурация");
	Если ИниКонфигурация.Свойство("Ответственные") Тогда
		ИмяСправочника = СокрЛП(Сред(ИниКонфигурация.Ответственные.Значение, Найти(ИниКонфигурация.Ответственные.Значение, ".")+1));
		ТипСправочника = "СправочникСсылка." + ИмяСправочника;
	Иначе
		ТипСправочника = "СправочникСсылка.Пользователи";
	КонецЕсли;
	ОписаниеТипа = Новый ОписаниеТипов(ТипСправочника);
	ПараметрыФильтра.Вставить( "ФильтрОтветственный", ОписаниеТипа.ПривестиЗначение());
	ПараметрыФильтра.Вставить( "ФильтрМаска", "");
	ПараметрыФильтра.Вставить( "РазмерСтраницы", 1 ); 
    ПараметрыФильтра.Вставить( "Страница", 1 );
   	ПараметрыФильтра.Вставить( "ВсеДокументы", Истина );
		
	// Добавляем пользовательские фильтры
	Если ГлавноеОкно.Кэш.ПараметрыФильтра.Количество()>0 Тогда
		ПараметрыФильтра.Вставить( "Пользовательские", Новый Структура);
		Для Каждого Элемент Из ГлавноеОкно.Кэш.ПараметрыФильтра Цикл
			ПараметрыФильтра.Пользовательские.Вставить( Элемент.Ключ, Элемент.Значение);		
		КонецЦикла;
	КонецЕсли;
					
	//Получим массив выгружаемых документов по запросу
	РаботаСДокументами = сбисПолучитьФорму("РаботаСДокументами1С");
	ТекстЗапроса = РаботаСДокументами.РассчитатьЗначение("ЗапросСпискаДокументов", Ини, ГлавноеОкно.Кэш);
	МассивДокументов1С = РаботаСДокументами.ЗаполнитьМассивДокументов1С(ТекстЗапроса, ПараметрыФильтра, ГлавноеОкно.Кэш.Парам.КаталогНастроек);
	//Подготовим список документов
	СписокОтмеченныхДокументов = Новый СписокЗначений;
	Для каждого СтрокаТЗ из МассивДокументов1С Цикл
		СписокОтмеченныхДокументов.Добавить(СтрокаТЗ);
		ТекущаяСтрока = СтрокаТЗ;
		ТекущийРаздел = Ини.ДокументРаздел.Значение;
		//Откроем пакет документов
		ПозЗпт = Найти(ТекущийРаздел, ",");
		Если ПозЗпт>0 Тогда
			ТекущийРаздел = Лев(ТекущийРаздел, ПозЗпт-1);	
		КонецЕсли;
		ТекущийРаздел = СтрЗаменить(ТекущийРаздел, "'", "");
		Если ТекущийРаздел = "Покупка" Тогда
			ГлавноеОкно.Кэш.Текущий.Раздел = "4";
		Иначе
			ГлавноеОкно.Кэш.Текущий.Раздел = "3";
		КонецЕсли;
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокумент","Раздел_"+ТекущийРаздел+"_Шаблон",, ГлавноеОкно.Кэш);
		ГлавноеОкно.Кэш.ГлавноеОкно = ГлавноеОкно;
		фрм.ПоказатьДокумент(ГлавноеОкно.Кэш, ТекущаяСтрока);	
	КонецЦикла;
КонецФункции
	
Функция сбисПогаситьВСД(ГлавноеОкно, ИмяИни, Документ)           // alo ВСД
	ГлавноеОкно.Кэш.Текущий.Раздел = "1";
	ПолучилосьАвтоматически = Ложь;
	Ини = ГлавноеОкно.Кэш.ФормаНастроек.Ини(ГлавноеОкно.Кэш, ИмяИни);
	Если ЗначениеЗаполнено(Ини) И Ини.свойство("мФайл") И Ини.мФайл.свойство("АктРасхождение") Тогда
		РеквизитДатаВх = ?(Ини.Свойство("Документ_ДатаВх"), Ини.Документ_ДатаВх.Значение, ?(Ини.Свойство("Документ_Дата"), Ини.Документ_Дата.Значение, ""));
		РеквизитНомерВх = ?(Ини.Свойство("Документ_НомерВх"), Ини.Документ_НомерВх.Значение, ?(Ини.Свойство("Документ_Номер"), Ини.Документ_Номер.Значение, ""));
		Если ЗначениеЗаполнено(РеквизитДатаВх) ИЛИ ЗначениеЗаполнено(РеквизитНомерВх) Тогда
			ГлавноеОкно.СписокСостояний = новый СписокЗначений;
			ГлавноеОкно.ФильтрТипыДокументов = новый СписокЗначений;
			ГлавноеОкно.ФильтрКонтрагентСФилиалами = Ложь;
			ГлавноеОкно.ФильтрОрганизация = "";
			ГлавноеОкно.ФильтрМаска = "";
			ГлавноеОкно.ЗаписейНаСтранице = 2;
			ГлавноеОкно.ФильтрСтраница = 1;

			Контекст=новый структура("ини, Документ",Ини,Документ);
			
			Если Ини.Свойство("Контрагент_Роль") Тогда
				РольКонтрагента = СтрЗаменить(Ини.Контрагент_Роль.Значение,"'","");
				Если ЗначениеЗаполнено(РольКонтрагента) И Ини.мСторона.Свойство(РольКонтрагента) Тогда
					ФильтрКонтрагент = ГлавноеОкно.Кэш.ОбщиеФункции.РассчитатьЗначениеНаСервере(Ини.мСторона[РольКонтрагента].Сторона.Значение,Контекст);
					Если ЗначениеЗаполнено(ФильтрКонтрагент) Тогда
						ГлавноеОкно.ФильтрКонтрагент = ФильтрКонтрагент;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			РольОрганизации = ""; 
			Если Ини.Свойство("Организация_Роль") Тогда
				РольОрганизации = СтрЗаменить(Ини.Организация_Роль.Значение,"'","");
			ИначеЕсли Ини.Свойство("НашаОрганизация_Роль") Тогда
				РольОрганизации = СтрЗаменить(Ини.НашаОрганизация_Роль.Значение,"'","");
			КонецЕсли;
			Если ЗначениеЗаполнено(РольОрганизации) И Ини.мСторона.Свойство(РольОрганизации) Тогда
				ФильтрОрганизация = ГлавноеОкно.Кэш.ОбщиеФункции.РассчитатьЗначениеНаСервере(Ини.мСторона[РольОрганизации].Сторона.Значение,Контекст);
				Если ЗначениеЗаполнено(ФильтрОрганизация) Тогда
					ГлавноеОкно.ФильтрОрганизация = ФильтрОрганизация;
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(РеквизитДатаВх) Тогда
				ФильтрДатаНач = ГлавноеОкно.Кэш.ОбщиеФункции.РассчитатьЗначениеНаСервере(РеквизитДатаВх,Контекст);
				Если ЗначениеЗаполнено(ФильтрДатаНач) Тогда
					ГлавноеОкно.ФильтрДатаНач = ФильтрДатаНач;
					ГлавноеОкно.ФильтрДатаКнц = ФильтрДатаНач;
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(РеквизитНомерВх) Тогда
				ФильтрМаска = ГлавноеОкно.Кэш.ОбщиеФункции.РассчитатьЗначениеНаСервере(РеквизитНомерВх,Контекст);
				Если ЗначениеЗаполнено(ФильтрМаска) Тогда
					ГлавноеОкно.ФильтрМаска = ФильтрМаска;
				КонецЕсли;
			КонецЕсли;
				
			filter = ГлавноеОкно.Кэш.ОбщиеФункции.ПолучитьФильтрСобытий(ГлавноеОкно.Кэш, Новый Структура("Тип", "ДокОтгрВх"));
			ПакетыСБИС = ГлавноеОкно.Кэш.Интеграция.сбисПолучитьСписокДокументовПоФильтру(ГлавноеОкно.Кэш, filter, ГлавноеОкно); 
			Если ЗначениеЗаполнено(ПакетыСБИС) И ПакетыСБИС.Таблица_РеестрДокументов.количество()=1 Тогда
				ПакетСБИС = ПакетыСБИС.Таблица_РеестрДокументов[0];
				фрм = ГлавноеОкно.сбисНайтиФормуФункции("ЗаписатьПараметрыДокументаСБИС",ГлавноеОкно.Кэш.ФормаРаботыСоСтатусами,"",ГлавноеОкно.Кэш);
						СтруктураСвойств = Новый Структура("ДокументСБИС_Ид,ДокументСБИС_ИдВложения", ПакетСБИС.ИдСБИС,"");
				фрм.ЗаписатьПараметрыДокументаСБИС(СтруктураСвойств, Документ, ГлавноеОкно.Кэш.Ини.Конфигурация, ГлавноеОкно.Кэш.Парам.КаталогНастроек);
				
				ПолныйСоставПакета = ГлавноеОкно.Кэш.Интеграция.ПрочитатьДокумент(ГлавноеОкно.Кэш, ПакетСБИС.ИдСБИС);
				
				фрм = ГлавноеОкно.сбисНайтиФормуФункции("СформироватьРасхождениеНажатие","ФормаПросмотрДокумента","", ГлавноеОкно.Кэш);
				фрм.МестныйКэш = ГлавноеОкно.Кэш;
				фрм.ИмяРеквизитаВложений = "Вложение";
				фрм.СоставПакета = ГлавноеОкно.Кэш.ОбщиеФункции.РазобратьСтруктуруДокументаСбис(ПолныйСоставПакета, ГлавноеОкно.Кэш, фрм.ИмяРеквизитаВложений);
				фрм.ЗаполнитьТаблицуДокументов(фрм.СоставПакета);
				фрм.СформироватьРасхождениеНажатие(неопределено);
				Если фрм.СоставПакета.Вложение.количество()>0 Тогда	
					Вложение = фрм.СоставПакета.Вложение[фрм.СоставПакета.Вложение.количество()-1];
					Если Вложение.Тип = "АктРасхождение" Тогда
						ГлавноеОкно.Кэш.Интеграция.СБИСЗаписатьВложения(ГлавноеОкно.Кэш, фрм.СоставПакета, Вложение);
						Сообщить("Обновлен документ "+фрм.СоставПакета.Название);
						ГлавноеОкно.ОткрытьДокументОнлайнПоПакету(фрм.СоставПакета, ГлавноеОкно.Кэш);
						ПолучилосьАвтоматически= Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если не ПолучилосьАвтоматически Тогда    // открыть форму для ручной работы и инструкцию
		ЗапуститьПриложение("https://sbis.ru/help/integration/1C_set/modul/loading");
		ГлавноеОкно.ПерейтиВРаздел("АккордеонДокОтгрВх11");
		ГлавноеОкно.Открыть();
	КонецЕсли;
КонецФункции	// alo Меркурий >>

