 
//////////////////////////////////////////////////////////////////////////////////

////////////////////// Обычное приложение/////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////

Процедура ТаблицаДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Оформление таблицы вложений пакета	
	ОформлениеСтроки.Ячейки.Удалить.ОтображатьКартинку = Истина;
	ОформлениеСтроки.Ячейки.Удалить.ИндексКартинки = 0;
	Если НЕ СоставПакета.Свойство("Направление") Тогда		
		Возврат;
	КонецЕсли;
	//ОформлениеСтроки.Ячейки.Статус.ОтображатьКартинку = Истина;
	//ОформлениеСтроки.Ячейки.Статус.ИндексКартинки = ДанныеСтроки.СтатусКартинка;	
	
	ОформлениеСтроки.Ячейки.СтатусКартинка.ОтображатьТекст		= Ложь;
	ОформлениеСтроки.Ячейки.СтатусКартинка.ОтображатьКартинку	= Истина;
	ОформлениеСтроки.Ячейки.СтатусКартинка.ИндексКартинки		= ДанныеСтроки.СтатусКартинка;
	
	Если Найти(ДанныеСтроки.Статус, "Не вся номенклатура сопоставлена")>0 или Найти(ДанныеСтроки.Статус, "Не найдена организация")>0 или Найти(ДанныеСтроки.Статус, "Не найден контрагент")>0 Тогда
		ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(187,12,12);
	Иначе
		ОформлениеСтроки.Ячейки.Статус.ЦветТекста = Новый Цвет(0,0,0);
	КонецЕсли;
КонецПроцедуры

Процедура ТабличнаяЧастьХарактеристикаНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Устанавливается владелец характеристики 	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура) Тогда
		Если МестныйКэш.Ини.Конфигурация.Свойство("ХарактеристикиНоменклатуры") Тогда
			ИмяСправочникаХарактеристикиНоменклатуры = СокрЛП(Сред(МестныйКэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, Найти(МестныйКэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, ".")+1));
		Иначе
			ИмяСправочникаХарактеристикиНоменклатуры="ХарактеристикиНоменклатуры";
		КонецЕсли;
		Форма=Справочники[ИмяСправочникаХарактеристикиНоменклатуры].ПолучитьФормуВыбора(,Элемент);
		Форма.ПараметрВыборПоВладельцу = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура;
		Форма.Открыть();	
	Иначе
		Предупреждение("Заполните номенклатуру");
	КонецЕсли;
КонецПроцедуры
Процедура СобытияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	// Оформления таблицы Прохождения	
	Если Лев(ДанныеСтроки.Название,9) = "Отклонено" Тогда
		ОформлениеСтроки.Ячейки.Название.ЦветТекста = Новый Цвет(255, 0, 0);	
	КонецЕсли;
КонецПроцедуры
Процедура ТабличнаяЧастьИдентификаторПриИзменении(Элемент)
	// Процедура записывает сопоставление номенклатуры	
	ТабЧасть = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть");
	Если ЗначениеЗаполнено(ТабЧасть.ТекущиеДанные.Номенклатура) Тогда
		ГлавноеОкно = МестныйКэш.ГлавноеОкно;
		ДанныеНоменклатуры = Новый Структура("Название,Идентификатор,Номенклатура,Характеристика,GTIN",ТабЧасть.ТекущиеДанные.Название,ТабЧасть.ТекущиеДанные.Идентификатор,ТабЧасть.ТекущиеДанные.Номенклатура,ТабЧасть.ТекущиеДанные.Характеристика,ТабЧасть.ТекущиеДанные.GTIN);
		ПутьКонтрагента = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьКонтрагента;
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("УстановитьСоответствиеНоменклатуры",МестныйКэш.ФормаРаботыСНоменклатурой,"", МестныйКэш);
		фрм.УстановитьСоответствиеНоменклатуры(МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьКонтрагента, Вложение.СтруктураФайла), ДанныеНоменклатуры, МестныйКэш.Парам.КаталогНастроек, МестныйКэш.Ини);
		НомерПП = ТабЧасть.ТекущиеДанные.НомерПП;
		ПутьТаблДок = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
		ТаблДок = МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
		ТаблДок[НомерПП-1].Вставить(Вложение.НоменклатураКодКонтрагента, ТабЧасть.ТекущиеДанные.Идентификатор);
		НоменклатураСопоставлена = Истина;
		Для Каждого СтрТабл Из ТаблДок Цикл
			Если Не СтрТабл.Свойство(Вложение.НоменклатураКодКонтрагента) или Не ЗначениеЗаполнено(СтрТабл[Вложение.НоменклатураКодКонтрагента])  Тогда
				НоменклатураСопоставлена = Ложь;	
			КонецЕсли;
		КонецЦикла;
		Если НоменклатураСопоставлена Тогда
			СоставПакета.Удалить("Ошибка");
			Вложение.XMLДокумента = МестныйКэш.ОбщиеФункции.сбисПолучитьXMLФайлаИзСтруктуры(Вложение,МестныйКэш.XSLT);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
Процедура сбисТабличнаяЧастьПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.Статус.ОтображатьКартинку = Истина;
	Если ЗначениеЗаполнено(ДанныеСтроки.Идентификатор) Тогда
		ОформлениеСтроки.Ячейки.Статус.ИндексКартинки = 0;
	Иначе
		ОформлениеСтроки.Ячейки.Статус.ИндексКартинки = 1;
	КонецЕсли;
КонецПроцедуры
Процедура ПолеHTMLДокументаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Если ДанныеСобытия.srcElement.id = "Открыть" Тогда
		Если сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.Свойство("ПолноеИмяФайла") Тогда // файл добавлен в пакет для отправки (вручную или во внешних функциях) 
			ПолноеИмяФайла = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.ПолноеИмяФайла;
		Иначе
			ФайлИмя = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение;
			Если	Не	ФайлИмя.Свойство("Файл", ФайлИмя)
				Или	Не	ФайлИмя.Свойство("Имя", ФайлИмя) Тогда
				Сообщить("Невозможно открыть файл во внешней программе.");
				Возврат;
			КонецЕсли;
			ПолноеИмяФайла = КаталогВременныхФайлов()+ ФайлИмя;   // файл с онлайна
			МестныйКэш.Интеграция.СохранитьВложениеПоСсылкеВФайл(МестныйКэш,сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.Файл.Ссылка,ПолноеИмяФайла);
		КонецЕсли;
		ЗапуститьПриложение(ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры
Процедура ТаблицаДокументовШифрованиеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекДанные = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные;
	Если ТекДанные<>Неопределено Тогда
		СоставПакета.Вложение[ТекДанные.НомерВложенияВПакете].Вставить(Элемент.ТекущаяКолонка.Имя, ТекДанные[Элемент.ТекущаяКолонка.Имя]);
	КонецЕсли;
КонецПроцедуры
Процедура ПереключитьТипВложений(Команда)
	// Вставить содержимое обработчика.
	Если ИмяРеквизитаВложений = "Вложение" Тогда
		Если Не СоставПакета.Свойство("ВложениеУчета") Тогда
			Сообщить("Отсутствуют вложения учета. Возможно в личном кабинете СБИС учет не ведется.");
			Возврат;
		КонецЕсли;
		ИмяРеквизитаВложений = "ВложениеУчета";
		сбисЭлементФормы(ЭтаФорма,"ПереключитьТипВложений").Заголовок = "Показать вложения ЭДО";
		Если Не ВложенияУчетаРазобраны Тогда
			ВложенияУчетаРазобраны = Истина;
			сч = 0;
			фрмСтатусы = МестныйКэш.ГлавноеОкно.сбисНайтиФормуФункции("НайтиДокументы1СПоИдВложенияСБИС",МестныйКэш.ФормаРаботыСоСтатусами,"",МестныйКэш);
			Для Каждого ВложениеУчета Из СоставПакета.ВложениеУчета Цикл
				СоставПакета.ВложениеУчета[сч].Вставить("Направление", СоставПакета.Направление);
				СоставПакета.ВложениеУчета[сч].Вставить("Идентификатор", ВложениеУчета.Тип+ВложениеУчета.Подтип+ВложениеУчета.ВерсияФормата+ВложениеУчета.ПодверсияФормата);
				ТекстHTML = МестныйКэш.Интеграция.ПолучитьHTMLВложения(МестныйКэш, СоставПакета.Идентификатор, ВложениеУчета);
				СоставПакета.ВложениеУчета[сч].Вставить("ТекстHTML",ТекстHTML);
				ДанныеДокумента1С = фрмСтатусы.НайтиДокументы1СПоИдВложенияСБИС(СоставПакета.Идентификатор, ВложениеУчета.Идентификатор, МестныйКэш.Ини, МестныйКэш.ГлавноеОкно.Кэш.Парам.КаталогНастроек);
				СоставПакета.ВложениеУчета[сч].Вставить("Документы1С", Новый СписокЗначений);
				СоставПакета.ВложениеУчета[сч].Вставить("Документ1СПроведен");
				СоставПакета.ВложениеУчета[сч].Вставить("Отмечен", Истина);
				Если ЗначениеЗаполнено(ДанныеДокумента1С) Тогда
					СоставПакета.ВложениеУчета[сч].Документы1С=ДанныеДокумента1С.Ссылки;
					СоставПакета.ВложениеУчета[сч].Документ1СПроведен=ДанныеДокумента1С.Проведен;
				КонецЕсли;
				сч = сч+1;
			КонецЦикла;
		КонецЕсли;
	Иначе
		ИмяРеквизитаВложений = "Вложение";
		сбисЭлементФормы(ЭтаФорма,"ПереключитьТипВложений").Заголовок = "Показать вложения СБИС";
	КонецЕсли;
	
	ОбновитьПоляФормыПоДокументуСБИС(СоставПакета);
	ТаблицаДокументовПриАктивизацииЯчейки(сбисЭлементФормы(ЭтаФорма, "ТаблицаДокументов"));
КонецПроцедуры
Процедура ТабличнаяЧастьПриИзмененииФлажка(Элемент, Колонка)
	// При снятии флага указываем на строке признак "НеЗагружать"
	ТабЧасть = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть");
	НомерПП = ТабЧасть.ТекущиеДанные.НомерПП;
	ПутьТаблДок = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
	ТаблДок = МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
	Если ТабЧасть.ТекущиеДанные.Отмечен Тогда
		ТаблДок[НомерПП-1].Удалить("НеЗагружать");
	Иначе
		ТаблДок[НомерПП-1].Вставить("НеЗагружать");
	КонецЕсли;
	ЗаполнитьТаблицуДокументов(СоставПакета);
КонецПроцедуры

