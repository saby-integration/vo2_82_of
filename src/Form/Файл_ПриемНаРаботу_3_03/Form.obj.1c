// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Попытка
			ЭтотОбъект="";
		Исключение
		КонецПопытки;
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции
//------------------------------------------------------

&НаКлиенте
Функция ПолучитьДанныеИзДокумента1С(Кэш,Контекст) Экспорт
	// Функция формирует структуру выгружаемого файла и добавляет его в состав пакета
	Попытка	
		//выбранные данные в Контекст.ФайлДанные
		
		Док  = Новый Структура;
		Док.Вставить("Файл",Новый Структура);
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Файл",Контекст.ФайлДанные,Док.Файл);
		Док.Файл.Вставить("Документ",Новый Структура);
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Документ",Контекст.ФайлДанные,Док.Файл.Документ);
		
		Док.Файл.Документ.Вставить("Стороны",Новый Структура);
		Отправитель = "";
		Получатель = "";
		ОтправительРоль=Кэш.ОбщиеФункции.РассчитатьЗначение("Отправитель_Роль", Контекст.ФайлДанные, Кэш);
		ПолучательРоль=Кэш.ОбщиеФункции.РассчитатьЗначение("Получатель_Роль", Контекст.ФайлДанные, Кэш);
		Если Не ЗначениеЗаполнено(ОтправительРоль) Тогда
			ОтправительРоль = "Отправитель";
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ПолучательРоль) Тогда
			ПолучательРоль = "Получатель";
		КонецЕсли;
		Если Контекст.ФайлДанные.Свойство("мСторона") Тогда
			Для Каждого Параметр Из Контекст.ФайлДанные.мСторона Цикл
				Если Параметр.Значение.Свойство("Роль") Тогда
					Роль = Кэш.ОбщиеФункции.РассчитатьЗначение("Роль",Параметр.Значение,Кэш);
				Иначе
					Роль = Кэш.ОбщиеФункции.РассчитатьЗначение("Сторона_Роль",Параметр.Значение,Кэш);
				КонецЕсли;
				Если Роль = ОтправительРоль Тогда
					Сертификат = Кэш.ОбщиеФункции.РассчитатьЗначение("Сертификат",Параметр.Значение,Кэш);
				КонецЕсли;
				Сторона = Кэш.ОбщиеФункции.ПолучитьСторону(Кэш,Параметр.Значение);     //?????
				Если Сторона<>Неопределено Тогда
					Док.Файл.Документ.Стороны.Вставить(Роль,Сторона);
				КонецЕсли;
			КонецЦикла;
			Если Док.Файл.Документ.Стороны.Свойство(ПолучательРоль) Тогда
				Получатель = Док.Файл.Документ.Стороны[ПолучательРоль];
			иначе
			//	Сообщить("Не удалось определить ИНН получателя документа "+строка(Контекст.Документ));
			//	Возврат Ложь;
				Получатель = новый структура("Наименование,ИНН,КПП");
			КонецЕсли;
			Если Док.Файл.Документ.Стороны.Свойство(ОтправительРоль) Тогда
				Отправитель = Док.Файл.Документ.Стороны[ОтправительРоль]; 
			иначе
				Сообщить("Не удалось определить ИНН отправителя документа "+строка(Контекст.Документ));
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
		Если Док.Файл.Свойство("Имя") Тогда
		//	Если Контекст.ФайлДанные.Свойство("мСторона") и Док.Файл.Документ[ПолучательРоль].Свойство("Идентификатор") и Док.Файл.Документ[ОтправительРоль].Свойство("Идентификатор") Тогда
		//		Док.Файл.Имя = Док.Файл.Имя + Док.Файл.Документ[ПолучательРоль].Идентификатор+"_"+Док.Файл.Документ[ОтправительРоль].Идентификатор;
		//	КонецЕсли;
			Док.Файл.Имя = Док.Файл.Имя+"_"+Формат(ТекущаяДата(),"ДФ=ггггММдд")+"_"+строка(Новый УникальныйИдентификатор());
		КонецЕсли;
	
		Для Каждого Параметр Из Контекст.ФайлДанные.мТаблДок Цикл
			Если ТипЗнч(Параметр.Значение) = Тип("Массив") Тогда    // стандартная табличная часть
				ТабЧастьДокумента = Параметр.Значение;
				Док.Файл.Документ.Вставить("Список"+Параметр.ключ,Новый Структура);
				СтрТабл=новый массив;
				Док.Файл.Документ["Список"+Параметр.ключ].Вставить(Параметр.ключ,СтрТабл);
			ИначеЕсли ТипЗнч(Параметр.Значение) = Тип("Структура") и Лев(Параметр.Значение.ТаблДок,1)<>"{" Тогда  // табличная часть из одной строки, которая заполняется прямо из реквизитов документа
				ТабЧастьДокумента = Новый Массив;
				ТабЧастьДокумента.Добавить(Параметр.Значение);
			Иначе   // табличная часть вычисляется с помощью функции
				Кэш.ОбщиеФункции.СкопироватьСтруктуру(Контекст.ФайлДанные, Параметр.Значение);
				ТабЧастьДокумента = Кэш.ОбщиеФункции.РассчитатьЗначение("ТаблДок", Контекст.ФайлДанные, Кэш);
			КонецЕсли;
		
			Если ТипЗнч(ТабЧастьДокумента) = Тип("Массив") Тогда
				//сч=0;
				Для Каждого Стр Из ТабЧастьДокумента Цикл
					ДобавлятьСтроку = ?(Стр.Свойство("ДобавлятьСтроку"),Стр.ДобавлятьСтроку,Истина);
					//сч=сч+1;
					НоваяСтрока = Новый Структура;
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"ТаблДок",Стр,НоваяСтрока);
					НоваяСтрока.Вставить("СвСотрудник",новый структура);
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"СвСотрудник",Стр,НоваяСтрока.СвСотрудник);
				//НоваяСтрока.Вставить("ПорНомер",Формат(сч, "ЧГ=0")); 
				//СуммаНДС = Кэш.ОбщиеФункции.РассчитатьЗначение("СуммаНДС", Стр, Кэш);
					НоваяСтрока.СвСотрудник.Вставить("Подразделение",новый структура);
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Подразделение",Стр,НоваяСтрока.СвСотрудник.Подразделение);
					НоваяСтрока.СвСотрудник.Вставить("ТрудДоговор",новый структура);
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"ТрудДоговор",Стр,НоваяСтрока.СвСотрудник.ТрудДоговор);
					НоваяСтрока.СвСотрудник.Вставить("Контакты",новый структура);
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Контакты",Стр,НоваяСтрока.СвСотрудник.Контакты);
					НоваяСтрока.СвСотрудник.Вставить("МестоРождения",новый структура);
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"МестоРождения",Стр,НоваяСтрока.СвСотрудник.МестоРождения);
					НоваяСтрока.СвСотрудник.Вставить("ВычетНаСотрудника",новый структура);
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"ВычетНаСотрудника",Стр,НоваяСтрока.СвСотрудник.ВычетНаСотрудника);

					СтруктураМестоРождения = РегламентированнаяОтчетность.РазложитьМестоРождения(Стр.МестоРождения);
					//КодРегион = ПолучитьКодРегионаПоНазванию(СтруктураМестоРождения.Область);
					//если значениеЗаполнено(СтруктураМестоРождения.Страна) И СтруктураМестоРождения.Страна <> "643" тогда
						НоваяСтрока.СвСотрудник.МестоРождения.Вставить("АдрИно",
							новый структура("КодСтр,АдрТекст",,
									СтруктураМестоРождения.Страна+" "+СтруктураМестоРождения.Область+" "+СтруктураМестоРождения.Район+" "+СтруктураМестоРождения.НаселенныйПункт));
					//иначе
					//	НоваяСтрока.СвСотрудник.МестоРождения.Вставить("АдрРФ",новый структура("КодРегион,Район,НаселПункт",
					//									КодРегион,
					//									СтруктураМестоРождения.Район,СтруктураМестоРождения.НаселенныйПункт));
					//КонецЕсли;
					НоваяСтрока.СвСотрудник.Вставить("Документы",новый структура);
					если значениеЗаполнено(стр.ПаспортныеДанныеФизЛиц) тогда
						НоваяСтрока.СвСотрудник.Документы.Вставить("УдостоверениеЛичности", новый структура("Вид,Серия,Номер,КемВыдан,ДатаВыдачи,КодПодр",
									стр.ПаспортныеДанныеФизЛиц.ДокументВид, стр.ПаспортныеДанныеФизЛиц.ДокументСерия, 
									стр.ПаспортныеДанныеФизЛиц.ДокументНомер ,стр.ПаспортныеДанныеФизЛиц.ДокументКемВыдан, 
									формат(стр.ПаспортныеДанныеФизЛиц.ДокументДатаВыдачи,"ДФ=dd.MM.yyyy"),
									стр.ПаспортныеДанныеФизЛиц.ДокументКодПодразделения));
					конецесли;
//					НоваяСтрока.СвСотрудник.Документы.Вставить("УВодительскоеУдостоверение", новый структура("Серия,Номер",

					НоваяСтрока.СвСотрудник.Вставить("Гражданство", новый структура("Страна",
												?(значениеЗаполнено(стр.Гражданство),стр.Гражданство.страна, "Россия")));
					если ЗначениеЗаполнено(Стр.Стажи) тогда
						Лет		= 0;
						Месяцев	= 0;
						Дней	= 0;
						ДатаНачалаОтсчетаСтажа = ДобавитьМесяц(Стр.Стажи.ДатаОтсчета, - Стр.Стажи.РазмерМесяцев) - Стр.Стажи.РазмерДней*86400;
						ОбщегоНазначенияЗК.РазобратьРазностьДат(КонецМесяца(Стр.СвСотрудник_Принят), НачалоДня(ДатаНачалаОтсчетаСтажа), Лет, Месяцев, Дней);
						НоваяСтрока.СвСотрудник.Вставить("Стаж", новый структура("Лет,Месяцев,Дней", Лет,Месяцев,Дней)); 
					конецесли;
					
					НоваяСтрока.СвСотрудник.Вставить("СписокТрудоваяДеятельность",новый структура());
					ТрудоваяДеятельность=новый массив;
					для каждого ТД из Стр.мТД.ТрудоваяДеятельность цикл
						ТрудоваяДеятельность.Добавить(новый структура("Организация,ДатНач,ДатКнц",
							тд.Организация, формат(тд.ДатаНачала,"ДФ=dd.MM.yyyy"), формат(тд.ДатаОкончания,"ДФ=dd.MM.yyyy")));
					конеццикла;
					НоваяСтрока.СвСотрудник.СписокТрудоваяДеятельность.вставить("ТрудоваяДеятельность",ТрудоваяДеятельность); 
					
					НоваяСтрока.СвСотрудник.Вставить("СписокЯзык",новый структура());
					Язык= новый массив;
					для каждого ЗЯ из Стр.мЗЯ.ЗнаниеЯзыков цикл
						Язык.Добавить(новый структура("Название,Код,Уровень",ЗЯ.Язык, ЗЯ.Язык.код, ЗЯ.СтепеньЗнанияЯзыка));
					конеццикла;
					НоваяСтрока.СвСотрудник.СписокЯзык.вставить("Язык",язык);
					
					НоваяСтрока.СвСотрудник.Вставить("СписокУчЗаведение",новый структура());
					УчЗаведение= новый массив;
					для каждого Обр из стр.мУЗ.УчЗаведение цикл
						УчЗаведение.Добавить(новый структура("Название,ДатНач,ДатКнц,ВидОбразования,ФормаОбучения,Специальность",
							Обр.УчебноеЗаведение,,формат(дата(Обр.ГодОкончания,05,31),"ДФ=dd.MM.yyyy"),Обр.ВидОбразования,,Обр.Специальность));
					конеццикла;
					НоваяСтрока.СвСотрудник.СписокУчЗаведение.вставить("УчЗаведение",УчЗаведение);

					НоваяСтрока.СвСотрудник.Вставить("СписокЧленСемьи",новый структура());
					ЧленСемьи= новый массив;
					чНомерРебенка=0;
					для каждого СС из стр.мСС.СоставСемьи цикл
						Член1= новый структура("ФИО,Тип,ДатаРождения",
							СС.Имя,СС.СтепеньРодства,формат(СС.ДатаРождения,"ДФ=dd.MM.yyyy"));
						родство=ВРег(СС.СтепеньРодства.Наименование);
						если родство ="СЫН" или родство ="ДОЧЬ" или родство ="ПАСЫНОК" или родство ="ПАДЧЕРИЦА" тогда
							чНомерРебенка=чНомерРебенка+1;
							если СС.ДатаРождения > ДобавитьМесяц(КонецМесяца(Стр.СвСотрудник_Принят),-18*12) тогда //	Младше18
								если чНомерРебенка=1 тогда
									НомерРебенка="Первый";
									сумма=1400;
								иначеЕсли чНомерРебенка=2 тогда
									НомерРебенка="Второй";
									сумма=1400; 
								иначеЕсли чНомерРебенка=3 тогда
									НомерРебенка="Третий";
									сумма=3000;
								иначеЕсли чНомерРебенка=4 тогда
									НомерРебенка="Четвертый";
									сумма=3000;
								иначеЕсли чНомерРебенка=5 тогда
									НомерРебенка="Пятый";
									сумма=3000;
								иначеЕсли чНомерРебенка=6 тогда
									НомерРебенка="Шестой";
									сумма=3000;
								иначеЕсли чНомерРебенка=7 тогда
									НомерРебенка="Седьмой";
									сумма=3000;
								иначе //Если чНомерРебенка=8 тогда
									НомерРебенка="Восьмой";
									сумма=3000;
								конецесли;
								Член1.Вставить("Вычет", новый структура("ДатаНачала, ДатаКонца, Сумма, НомерРебенка, Студент, Инвалид, ГруппаИнвалидности, ОдинокийРодитель, ОтказВторого",
									формат(СС.ДатаРождения,"ДФ=dd.MM.yyyy"),формат(ДобавитьМесяц(КонецМесяца(СС.ДатаРождения),18*12),"ДФ=dd.MM.yyyy"),
									сумма,НомерРебенка,"Нет", "Нет","Нет","Нет","Нет"));
							конецесли;
						конецесли;
						ЧленСемьи.Добавить(Член1);
					конеццикла;
					НоваяСтрока.СвСотрудник.СписокЧленСемьи.вставить("ЧленСемьи",ЧленСемьи);
	
					ТЗСведения= РегистрыНакопления.НДФЛСведенияОДоходах.Обороты(началоГода(Стр.СвСотрудник_Принят),КонецМесяца(Стр.СвСотрудник_Принят),
									новый структура("Организация,ФизЛицо", стр.Организация, стр.физЛицо),,"СуммаДохода");
					ТЗСведения.Свернуть(,"СуммаДохода");
					если ТЗСведения.Количество()>0 тогда
						НоваяСтрока.СвСотрудник.вставить("СовокупныйДоход",новый структура("Дата,Сумма",
											формат(КонецМесяца(Стр.СвСотрудник_Принят),"ДФ=dd.MM.yyyy"),ТЗСведения[0].СуммаДохода));
					конецесли;

					если значениеЗаполнено(стр.СведенияОбИнвалидности)>0 тогда
						НоваяСтрока.СвСотрудник.Вставить("Инвалидность",новый структура());
						НоваяСтрока.СвСотрудник.Инвалидность.вставить("Справка",новый структура("ДатаСправки, СерияСправки, НомерСправки, ДатаНачала, ДатаКонца",
							формат(стр.СведенияОбИнвалидности.ДатаВыдачи,"ДФ=dd.MM.yyyy"),стр.СведенияОбИнвалидности.СерияСправки,
							стр.СведенияОбИнвалидности.НомерСправки, формат(стр.СведенияОбИнвалидности.ДатаРегистрацииИзменений,"ДФ=dd.MM.yyyy"), 
							формат(стр.СведенияОбИнвалидности.СрокДействияСправки,"ДФ=dd.MM.yyyy")));
					конецесли;
				
					НоваяСтрока.СвСотрудник.вставить("ВоинскийУчет",новый структура());
					если значениеЗаполнено(стр.ВоинскийУчет) и (значениеЗаполнено(стр.ВоинскийУчет.ОтношениеКВоинскойОбязанности) или значениеЗаполнено(стр.ВоинскийУчет.ОтношениеКВоинскомуУчету)) тогда
						НоваяСтрока.СвСотрудник.ВоинскийУчет.вставить("ДанныеВоенногоБилета",новый структура("ВоенныйДокументВид,ВоенныйДокументНомер,ВоенныйДокументСерия,
							|ДокументДатаВыдачи,КатегорияГодности,ОтношениеКСлужбе,ОтношениеКУчету, ВоинскоеЗвание, ВУС, КатегорияЗапаса, Состав, Профиль,
							|ВоенныйБилетПенсионер,ПрохождениеСлужбыВВС_с,ПрохождениеСлужбыВВС_по, НомерКомандыПартии, МобилизационноеПредписание, 
							|МобилизационноеПредписаниеДатаВыдачи, МобилизационноеПредписаниеДатаИзъятия, Забронирован, ВидВоинскогоУчета",
								"Удостоверение гражданина, подлежащего призыву на ВС",,,,стр.ВоинскийУчет.Годность,стр.ВоинскийУчет.ОтношениеКВоинскойОбязанности,
								стр.ВоинскийУчет.ОтношениеКВоинскомуУчету, стр.ВоинскийУчет.Звание, стр.ВоинскийУчет.ВУС, стр.ВоинскийУчет.КатегорияЗапаса, 
								стр.ВоинскийУчет.Состав,,,,,стр.ВоинскийУчет.НомерКомандыПартии,?(стр.ВоинскийУчет.НаличиеМобпредписания,"Есть","Нет"),
								,,стр.ВоинскийУчет.ЗабронированОрганизацией,"Специальный"));
						НоваяСтрока.СвСотрудник.ВоинскийУчет.вставить("Военкомат", новый структура("Название,ИНН,КПП",стр.ВоинскийУчет.Военкомат));
					конецесли;
	
					НоваяСтрока.Вставить("Должность",новый структура);
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Должность",Стр,НоваяСтрока.Должность);
	//			структураXML.файл.Документ.СвПриказ.Должность= новый структура("Дата, Название, ИспытательныйСрок, Штат, Оклад, ПочасоваяОплата, ОсновнаяДолжность,
	//				|ГрафикРаботы, ОплатаТруда, Подразделение", формат(КДокументы.датаНачала,"ДФ=dd.MM.yyyy"), КДокументы.должность.наименование, 
	//				КДокументы.ИспытательныйСрок, КДокументы.ЗанимаемыхСтавок,КДокументы.Оклад,"Да","Да",КДокументы.ГрафикРаботы, КДокументы.СпособРасчета);
					НоваяСтрока.Должность.Вставить("Подразделение",новый структура);
					Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Подразделение",Стр,НоваяСтрока.Должность.Подразделение);
//			структураXML.файл.Документ.СвПриказ.Должность.Подразделение= новый структура("Филиал,Код,Название",
	//				?(значениеЗаполнено(КДокументы.подразделение.КПП) И КДокументы.подразделение.КПП <> организация.КПП,"Да","Нет"),
	//				КДокументы.подразделение.Код, КДокументы.подразделение.Наименование);
				
					фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеФормированияСтроки","Файл_"+Контекст.ФайлДанные.Файл_Формат+"_"+СтрЗаменить(СтрЗаменить(Контекст.ФайлДанные.Файл_ВерсияФормата, ".", "_"), " ", ""),"Файл_Шаблон", Кэш);
					Если фрм<>Ложь Тогда
						ДобавлятьСтроку = фрм.сбисПослеФормированияСтроки(НоваяСтрока, Кэш, Контекст, Стр);	
					КонецЕсли;
					Если ДобавлятьСтроку<>Ложь Тогда      // <>Ложь написано для совместимости со старыми функциями сбисПослеФормированияСтроки, которые могли ничего не возвращать
						СтрТабл.Добавить(НоваяСтрока);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
					
		ОтветственныйСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруОтветственного(Кэш,Контекст);
		ПодразделениеСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруПодразделения(Кэш,Контекст);
		РегламентСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруРегламента(Кэш,Контекст);
		ОснованияМассив = Кэш.ОбщиеФункции.ПолучитьМассивОснований(Кэш,Контекст);
		ДатаВложения = ?(Док.Файл.Документ.Свойство("Дата"), Док.Файл.Документ.Дата, "");
		НомерВложения = ?(Док.Файл.Документ.Свойство("Номер"), Док.Файл.Документ.Номер, "");
		НазваниеВложения = ?(Док.Файл.Документ.Свойство("Название"), Док.Файл.Документ.Название+" № "+НомерВложения+" от "+ДатаВложения, "");
		Тип = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_Тип", Контекст.ФайлДанные,Кэш);
		ПодТип = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодТип", Контекст.ФайлДанные,Кэш);
		ВерсияФормата = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ВерсияФормата", Контекст.ФайлДанные,Кэш);
		ПодВерсияФормата = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодВерсияФормата", Контекст.ФайлДанные,Кэш);
		Примечание = Кэш.ОбщиеФункции.РассчитатьЗначение("Примечание", Контекст.ФайлДанные,Кэш);

		Вложение = Новый Структура("СтруктураДокумента,Отправитель,Получатель,Ответственный,Подразделение,Регламент,ДокументОснование,
											|Документ1С, Название, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,Дата,Номер", 
								Док,Отправитель,Получатель,ОтветственныйСтруктура,ПодразделениеСтруктура,РегламентСтруктура,ОснованияМассив, 
								Контекст.Документ, НазваниеВложения, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,ДатаВложения,НомерВложения);
		//Если ЗначениеЗаполнено(Примечание) Тогда
		//	Вложение.Вставить("Примечание",Примечание);	
		//КонецЕсли;
		//Если ЗначениеЗаполнено(Сертификат) Тогда
		//	Вложение.Вставить("Сертификат",Сертификат);	
		//КонецЕсли;
		Контекст.СоставПакета.Вложение.Добавить(Вложение);
		Возврат Истина;
		
	Исключение
		Если Кэш.Свойство("РезультатОтправки") Тогда
			Кэш.РезультатОтправки.НеСформировано = Кэш.РезультатОтправки.НеСформировано+1;
		КонецЕсли;
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
КонецФункции
