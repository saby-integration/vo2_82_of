Перем	ТаблицаДанных		Экспорт;
Перем	МестныйКэш			Экспорт;//Не используется

//////////////////////////////////////////////////////////////
///////////////////////Работа формы///////////////////////////
//////////////////////////////////////////////////////////////

/////Кнопки/////

Процедура	ВыбратьВсеНажатие(Элемент)
	
	ОтметитьСтроки(Истина);
	
КонецПроцедуры

Процедура	ОКНажатие(Элемент)
		
	СформироватьПоказатьДокумент();
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Процедура	ОтменаНажатие(Элемент)
	
	Отмена();
	
КонецПроцедуры

Процедура	СнятьВсеНажатие(Элемент)
	
	ОтметитьСтроки(Ложь);
	
КонецПроцедуры

////Системные////

Процедура	ПриОткрытии()
	
	УстановитьСписокЗначений();
	УстановитьЗначенияПоУмолчанию();	
	
КонецПроцедуры

//////Прочие/////

Процедура	ОтметитьСтроки(Значение)
	
	Колонки.ЗаполнитьЗначения(Значение, "Отмечен");
	
КонецПроцедуры

Процедура	Отмена();
	
	Колонки.Очистить();
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Функция		СобратьОтмеченныеЗаголовки()
	
	СтруктураЗаголовков	= Новый	Структура();
	
	Для	Каждого	СтрокаВыбранныхКолонок	Из	Колонки	Цикл
		Если	Не	СтрокаВыбранныхКолонок.Отмечен	Тогда
			Продолжить;
		КонецЕсли;
		СтруктураЗаголовков.Вставить(СтрокаВыбранныхКолонок.Наименование, СтрокаВыбранныхКолонок.Заголовок);
	КонецЦикла;
	
	Возврат	СтруктураЗаголовков;

КонецФункции

Процедура	СформироватьПоказатьДокумент(ПутьККаталогу	= "", УстановленноеЗначение	= Неопределено)
	
	ТаблДок		= Неопределено;
	Расширение	= "";
	Тип			= "";
	
	Если	УстановленноеЗначение	= Неопределено	Тогда
		УстановленноеЗначение	= ЭлементыФормы.ВыводитьВ.Значение;
	КонецЕсли;
	
	Если		УстановленноеЗначение	= 0	Тогда
		Заголовки	= СобратьОтмеченныеЗаголовки();
		ТаблДок	= СформироватьТабличныйДокумент(ТаблицаДанных, Заголовки);
		Расширение	= "xls";
		Тип			= "xls";
	ИначеЕсли	УстановленноеЗначение	= 1	Тогда
		Заголовки	= СобратьОтмеченныеЗаголовки();
		ТаблДок	= СформироватьТекстовыйДокумент(ТаблицаДанных, Заголовки);
		Расширение	= "txt";
		Тип			= "UTF8"
	ИначеЕсли	УстановленноеЗначение	= 2	Тогда
		ДиалогПути	= Новый	ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогПути.Заголовок	= "Укажите каталог для сохранения файла";
		Если	ДиалогПути.Выбрать()	Тогда
			СформироватьПоказатьДокумент(ДиалогПути.Каталог, 0);
		КонецЕсли;
	ИначеЕсли	УстановленноеЗначение	= 3	Тогда
		ДиалогПути	= Новый	ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогПути.Заголовок	= "Укажите каталог для сохранения файла";
		Если	ДиалогПути.Выбрать()	Тогда
			СформироватьПоказатьДокумент(ДиалогПути.Каталог, 1);
		КонецЕсли;
	КонецЕсли;
	Если	Не	ТаблДок	= Неопределено	Тогда
		Если	ПутьККаталогу	= ""	Тогда
			ТаблДок.Показать("Новый реестр");
		Иначе
			Попытка
				ТаблДок.Записать(ПутьККаталогу	+ "/"	+ "Сохраненный реестр."	+ Расширение,	Тип);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура	УстановитьЗначенияПоУмолчанию()
	
	Если	ЭлементыФормы.ВыводитьВ.СписокВыбора.Количество()	Тогда
		ЭлементыФормы.ВыводитьВ.Значение	= 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура	УстановитьСписокЗначений()
	
	ЭлементыФормы.ВыводитьВ.СписокВыбора.Очистить();
	ЭлементыФормы.ВыводитьВ.СписокВыбора.Добавить(0, "Табличный документ"	,,ЭлементыФормы.КартинкаMXL.Картинка);
	ЭлементыФормы.ВыводитьВ.СписокВыбора.Добавить(1, "Текстовый документ"	,,ЭлементыФормы.КартинкаTXT.Картинка);
	ЭлементыФормы.ВыводитьВ.СписокВыбора.Добавить(2, "Файл Excel"			,,ЭлементыФормы.КартинкаExcel.Картинка);
	ЭлементыФормы.ВыводитьВ.СписокВыбора.Добавить(3, "Файл Блокнот"			,,ЭлементыФормы.КартинкаБлокнот.Картинка);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////
////////////////Ключевые процедуры и функции//////////////////
//////////////////////////////////////////////////////////////

Процедура	ВосстановитьДанныеНаСервере(Кэш, Отказ)
	
	ЗаполнитьТаблицуДанных(Кэш, Отказ);
	ЗаполнитьДанныеКолонок(Кэш, Отказ)
	
КонецПроцедуры

Процедура	ЗаполнитьТаблицуДанных(Кэш, Отказ)
	
	//Данные
	ТаблицаДанных		= Кэш.ТаблДок.Значение;
	
КонецПроцедуры

Процедура	ЗаполнитьДанныеКолонок(Кэш, Отказ)
	
	СтруктураЗаголовков	= ПолучитьСтруктуруЗаголовков(Кэш.ГлавноеОкно.ЭлементыФормы[Кэш.ТаблДок.Имя]);
	Колонки.Очистить();
	Если	СтруктураЗаголовков.Свойство("Видимые")	Тогда
		Для	Каждого	КлючИЗначение	Из	СтруктураЗаголовков.Видимые	Цикл
			НоваяСтрока	= Колонки.Добавить();
			НоваяСтрока.Заголовок		= КлючИЗначение.Значение;
			НоваяСтрока.Наименование	= КлючИЗначение.Ключ;
			НоваяСтрока.Отмечен			= Истина;
		КонецЦикла;
	КонецЕсли;
	Если	СтруктураЗаголовков.Свойство("Невидимые")	Тогда
		Для	Каждого	КлючИЗначение	Из	СтруктураЗаголовков.Невидимые	Цикл
			НоваяСтрока	= Колонки.Добавить();
			НоваяСтрока.Заголовок		= КлючИЗначение.Значение;
			НоваяСтрока.Наименование	= КлючИЗначение.Ключ;
			НоваяСтрока.Отмечен			= Ложь;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//Формируем табл. док для демонстрации списка. Управление выводом колонок через структуру заголовков. 
//&НаСервере
Функция		СформироватьТабличныйДокумент(ПереданныеДанные, Заголовки	= Неопределено)	Экспорт
	
	//Если что, можно просто сформировать таблицу/структуру с данными на вывод и вызвать эту функцию для формирования документа.
	Данные		= ПереданныеДанные;
	ТаблДок		= Новый ТабличныйДокумент;
	ЭтоТаблица	= Ложь;
	
	//Структура заголовков не обязательна. Если её нет, выводятся все колонки, если есть, то выводятся только колонки в структуре.
	Если	Не	ТипЗнч(Заголовки)	= Тип("Структура")	Тогда
			ЗаполнитьЗаголовки	= Истина;
	   		Заголовки			= Новый Структура;
	Иначе
		ЗаполнитьЗаголовки	= Ложь;
	КонецЕсли;	                     
	
	//Если		ТипЗнч(ПереданныеДанные)	= Тип("Строка")
	//	И		ТипЗнч(ЭтаФорма)			= Тип("УправляемаяФорма")
	//	И	Не	ЭтаФорма.Элементы.найти(ПереданныеДанные)	= Неопределено	Тогда//Передано имя элемента формы, выводим таблицу значений
	//		Данные	= РеквизитФормыВЗначение(Данные);
	//Иначе//У нас ничего не выйдет, если переданы заголовки, убрать и дальше вывалиться в ошибку
	//   	Заголовки			= Новый Структура;
	//	ЗаполнитьЗаголовки	= Истина;
	//КонецЕсли;
	
	Если		Не	ЗаполнитьЗаголовки						Тогда//Выводим по заголовкам
		ДанныеКолонок		= Заголовки;
		Колонка_Имя			= "Ключ";
		Колонка_Заголовок	= "Значение";
	ИначеЕсли	ТипЗнч(Данные)	= Тип("ТаблицаЗначений")	Тогда//Выводим таблицу значений
		ДанныеКолонок		= Данные.Колонки;
		Колонка_Имя			= "Имя";
		Колонка_Заголовок	= "Заголовок";
	ИначеЕсли	ТипЗнч(Данные)	= Тип("Массив")
			И	Данные.Количество()
			И	ТипЗнч(Данные[0])	= Тип("Структура")		Тогда//Выводим массив структур. Если надо передать данные с клиента, можно в массиве строк
					ДанныеКолонок		= Данные[0];
					Колонка_Имя			= "Ключ";
					Колонка_Заголовок	= "Ключ";
	Иначе
		Сообщить("Неверно переданы данные в процедуру формирования табличного документа!",	СтатусСообщения.Обычное);
		ДанныеКолонок	= Новый	Структура;
	КонецЕсли;
	
	РазмерСтроки	= ДанныеКолонок.Количество();
	Если	РазмерСтроки	= 0	Тогда
		Возврат	Неопределено;
	КонецЕсли;
		
    ОбластьВывода	= ТаблДок.ПолучитьОбласть(1, 1, 1, РазмерСтроки);
	
	Счетчик			= 0;
	Для	Каждого	Колонка	Из	ДанныеКолонок	Цикл
		Счетчик				= Счетчик	+ 1;
		ИмяКолонки			= Колонка[Колонка_Имя];
		Если	ПустаяСтрока(ИмяКолонки)	Тогда
			Продолжить;
		КонецЕсли;
		ЗаговокКолонки		= ?(ЗначениеЗаполнено(Колонка[Колонка_Заголовок]),Колонка[Колонка_Заголовок],ИмяКолонки);
		ОбластьЗаполнения	= ОбластьВывода.Область(1, Счетчик, 1, Счетчик);
		ОбластьЗаполнения.Параметр		= ИмяКолонки;
		ОбластьЗаполнения.Заполнение	= ТипЗаполненияОбластиТабличногоДокумента.Параметр;
		Если	ЗаполнитьЗаголовки	Тогда//Если не переданы заголовки, заполнить по-умолчанию.
			Заголовки.Вставить(ИмяКолонки, ЗаговокКолонки);
		КонецЕсли;
	КонецЦикла;
	
	ОбластьВывода.Параметры.Заполнить(Заголовки);
	ЛинияГраницы	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
	ОбластьВывода.Область(1, 1, 1, Счетчик).ГраницаСнизу	= ЛинияГраницы;
    ТаблДок.Вывести(ОбластьВывода);
	
	ЛинияГраницы	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
	ОбластьВывода.Область(1, 1, 1, Счетчик).ГраницаСнизу	= ЛинияГраницы;
	
	Для	Каждого	СтрокаДанных	Из	Данные	Цикл
        ОбластьВывода.Параметры.Заполнить(СтрокаДанных);
        ТаблДок.Вывести(ОбластьВывода);
	КонецЦикла;
	
	Возврат	ТаблДок;
	
КонецФункции

Функция		СформироватьТекстовыйДокумент(ПереданныеДанные, Заголовки	= Неопределено)	Экспорт
	
	//Если что, можно просто сформировать таблицу/структуру с данными на вывод и вызвать эту функцию для формирования документа.
	Данные		= ПереданныеДанные;
	ТекстДок	= Новый ТекстовыйДокумент;
	СтрокаТекста= "";
	ЭтоТаблица	= Ложь;
	
	//Структура заголовков не обязательна. Если её нет, выводятся все колонки, если есть, то выводятся только колонки в структуре.
	Если	Не	ТипЗнч(Заголовки)	= Тип("Структура")	Тогда
			ЗаполнитьЗаголовки	= Истина;
	   		Заголовки			= Новый Структура;
	Иначе
		ЗаполнитьЗаголовки	= Ложь;
	КонецЕсли;	                     
	
	//Если		ТипЗнч(ПереданныеДанные)	= Тип("Строка")
	//	И		ТипЗнч(ЭтаФорма)			= Тип("УправляемаяФорма")
	//	И	Не	ЭтаФорма.Элементы.найти(ПереданныеДанные)	= Неопределено	Тогда//Передано имя элемента формы, выводим таблицу значений
	//		Данные	= РеквизитФормыВЗначение(Данные);
	//Иначе//У нас ничего не выйдет, если переданы заголовки, убрать и дальше вывалиться в ошибку
	//   	Заголовки			= Новый Структура;
	//	ЗаполнитьЗаголовки	= Истина;
	//КонецЕсли;
	
	Если		Не	ЗаполнитьЗаголовки						Тогда//Выводим по заголовкам
		ДанныеКолонок		= Заголовки;
		Колонка_Имя			= "Ключ";
		Колонка_Заголовок	= "Значение";
	ИначеЕсли	ТипЗнч(Данные)	= Тип("ТаблицаЗначений")	Тогда//Выводим таблицу значений
		ДанныеКолонок		= Данные.Колонки;
		Колонка_Имя			= "Имя";
		Колонка_Заголовок	= "Заголовок";
	ИначеЕсли	ТипЗнч(Данные)	= Тип("Массив")
			И	Данные.Количество()
			И	ТипЗнч(Данные[0])	= Тип("Структура")		Тогда//Выводим массив структур. Если надо передать данные с клиента, можно в массиве строк
					ДанныеКолонок		= Данные[0];
					Колонка_Имя			= "Ключ";
					Колонка_Заголовок	= "Ключ";
	Иначе
		Сообщить("Неверно переданы данные в процедуру формирования табличного документа!",	СтатусСообщения.Обычное);
		ДанныеКолонок	= Новый	Структура;
	КонецЕсли;
	
	РазмерСтроки	= ДанныеКолонок.Количество();
	Если	РазмерСтроки	= 0	Тогда
		Возврат	Неопределено;
	КонецЕсли;
		
	Счетчик			= 0;
	Для	Каждого	Колонка	Из	ДанныеКолонок	Цикл
		Счетчик				= Счетчик	+ 1;
		ИмяКолонки			= Колонка[Колонка_Имя];
		Если	ПустаяСтрока(ИмяКолонки)	Тогда
			Продолжить;
		КонецЕсли;
		ЗаговокКолонки	= ?(ЗначениеЗаполнено(Колонка[Колонка_Заголовок]),Колонка[Колонка_Заголовок],ИмяКолонки);
		СтрокаТекста	= СтрокаТекста	+ ЗаговокКолонки	+ Символы.Таб;
		Если	ЗаполнитьЗаголовки	Тогда//Если не переданы заголовки, заполнить по-умолчанию.
			Заголовки.Вставить(ИмяКолонки, ЗаговокКолонки);
		КонецЕсли;
	КонецЦикла;
	
	СтрокаТекста	= СтрокаТекста	+ Символы.ПС;
	
	Для	Каждого	СтрокаДанных	Из	Данные	Цикл
		Для	Каждого	КлючИЗначение	Из	Заголовки	Цикл
			СтрокаТекста	= СтрокаТекста	+ СтрЗаменить(Строка(СтрокаДанных[КлючИЗначение.Ключ]), Символы.ПС, " ")	+ Символы.Таб;
		КонецЦикла;
		СтрокаТекста	= СтрокаТекста	+ Символы.ПС;
	КонецЦикла;
	
	ТекстДок.УстановитьТекст(СтрокаТекста);
	
	Возврат	ТекстДок;
	
КонецФункции

Процедура	сбисВывестиСписок(Кэш)	Экспорт
	
	Отказ	= Ложь;
	Если	ЭтаФорма.Открыта()	Тогда
		Закрыть();
	КонецЕсли;
	ВосстановитьДанныеНаСервере(Кэш, Отказ);
	Если	Не	Отказ	Тогда
		//МестныйКэш			= Кэш;
		ЭтаФорма.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Функция		ПолучитьСтруктуруЗаголовков(ТабличноеПоле)
	
	СтруктураЗаголовков		= Новый	Структура("Видимые, Невидимые", Новый	Структура, Новый	Структура);
	Для	Каждого	Колонка	Из	ТабличноеПоле.Колонки	Цикл
		Если	Колонка.Видимость	Тогда
			СтруктураЗаголовков.Видимые.Вставить(Колонка.Имя, Колонка.ТекстШапки);
		Иначе
			СтруктураЗаголовков.Невидимые.Вставить(Колонка.Имя, Колонка.ТекстШапки);
		КонецЕсли;
	КонецЦикла;
	Если	СтруктураЗаголовков.Видимые.Количество()	Или	СтруктураЗаголовков.Невидимые.Количество()	Тогда
		Возврат	СтруктураЗаголовков;
	Иначе
		Возврат	Неопределено;
	КонецЕсли;
	
КонецФункции